<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Home</title>
  
  <subtitle>Ai si</subtitle>
  <link href="http://aisibuhuipao.github.io/atom.xml" rel="self"/>
  
  <link href="http://aisibuhuipao.github.io/"/>
  <updated>2021-12-27T01:09:37.000Z</updated>
  <id>http://aisibuhuipao.github.io/</id>
  
  <author>
    <name>柒妖</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>win-dos-思维脑图</title>
    <link href="http://aisibuhuipao.github.io/2021/12/27/win-dos-%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE/"/>
    <id>http://aisibuhuipao.github.io/2021/12/27/win-dos-%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE/</id>
    <published>2021-12-27T01:09:37.000Z</published>
    <updated>2021-12-27T01:09:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/win%20dos%20%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE.png" alt="win dos 思维脑图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/win%20dos%20%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE.png&quot; alt=&quot;win dos 思维脑图</summary>
      
    
    
    
    
    <category term="思维脑图" scheme="http://aisibuhuipao.github.io/tags/%E6%80%9D%E7%BB%B4%E8%84%91%E5%9B%BE/"/>
    
    <category term="windows" scheme="http://aisibuhuipao.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>HTML，Js和CSS</title>
    <link href="http://aisibuhuipao.github.io/2021/12/26/HTML%EF%BC%8CJs%E5%92%8CCSS/"/>
    <id>http://aisibuhuipao.github.io/2021/12/26/HTML%EF%BC%8CJs%E5%92%8CCSS/</id>
    <published>2021-12-26T04:06:51.000Z</published>
    <updated>2021-12-26T04:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>  一、HTML 超文本标记语言（Hyper Text Markup Language）</p><p>​            HTML是标记语言，不是编程语言</p><p>​                工具自动生成</p><p>​            <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211226121618835.png" alt="image-20211226121618835"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211226121847653.png" alt="image-20211226121847653"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  一、HTML 超文本标记语言（Hyper Text Markup Language）&lt;/p&gt;
&lt;p&gt;​            HTML是标记语言，不是编程语言&lt;/p&gt;
&lt;p&gt;​                工具自动生成&lt;/p&gt;
&lt;p&gt;​            &lt;img</summary>
      
    
    
    
    
    <category term="HTML" scheme="http://aisibuhuipao.github.io/tags/HTML/"/>
    
    <category term="JavaScript" scheme="http://aisibuhuipao.github.io/tags/JavaScript/"/>
    
    <category term="CSS" scheme="http://aisibuhuipao.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>TCP握手与挥手</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/TCP%E6%8F%A1%E6%89%8B%E4%B8%8E%E6%8C%A5%E6%89%8B/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/TCP%E6%8F%A1%E6%89%8B%E4%B8%8E%E6%8C%A5%E6%89%8B/</id>
    <published>2021-12-25T14:48:18.000Z</published>
    <updated>2021-12-25T14:48:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>nc -lvnp 8080                        nc 127.0.0.1 8080</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232618476.png" alt="image-20211225232618476"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232639421.png" alt="image-20211225232639421"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225232653750.png" alt="image-20211225232653750"></p><p>curl</p><p>都可以抓包</p><p>一.分析tcp三次握手，四次挥手，和数据包传输过程，并截图分析。 TCP数据段分析</p><p>​    \1.  源端口和目的端口 各占 16位</p><p>​    \2.  序号占 32位</p><p>​    \3.  确认号占 32位</p><p>​    \4.  数据偏移占 4位 即首部长度</p><p>​    \5.  保留位占 6位</p><p>​    \6.  紧急URG占 1位，当为1时，报告此文件中有紧急数据</p><p>​    \7.  确认ACK占 1位，确认有效，否则 (3)：“确认号” 字段无效</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225226141.png" alt="image-20211225225226141"></p><p>​            URG紧急指针（urgent pointer）有效。</p><p>​            ACK表示响应</p><p>​            PSH表示有 DATA数据传输</p><p>​            RST表示连接重置</p><p>​            SYN表示建立连接</p><p>​            FIN表示关闭连接        </p><p>位码即tcp标志位，有6种标示：SYN(synchronous建立联机) ACK(acknowledgement 确认) PSH(push传送) FIN(finish结束) RST(reset重置) URG(urgent紧急)Sequence number(顺序号码) Acknowledge number(确认号码)</p><p>第一次握手：主机A发送位码为syn＝1，随机产生seq number=1234567的数据包到服务器，主机B由SYN=1知道，A要求建立联机；</p><p>第二次握手：主机B收到请求后要确认联机信息，向A发送ack number=(主机A的seq+1)，syn=1，ack=1，随机产生seq=7654321的包；</p><p>第三次握手：主机A收到后检查ack number是否正确，即第一次发送的seq number+1，以及位码ack是否为1，若正确，主机A会再发送ack number=(主机B的seq+1)，ack=1，主机B收到后确认seq值与ack=1则连接建立成功。</p><p>完成三次握手，主机A与主机B开始传送数据。</p><p>在TCP/IP协议中，TCP协议提供可靠的连接服务，采用三次握手建立一个连接。<br>第一次握手：建立连接时，客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；</p><p>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。完成三次握手，客户端与服务器开始传送数据.</p><p>打开Wireshark</p><p>​    打开一个网站 <a href="http://www.tianya.cn/">http://www.tianya.cn/</a></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225307516.png" alt="image-20211225225307516"></p><p>​    第4个包表示HTTP确实使是使用TCP建立连接的</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225325803.png" alt="image-20211225225325803"></p><p>TCP第一次握手</p><p>​    客户端发送一个TCP包，标志位为 SYN，序号为0 表示客户端请求连接</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225341864.png" alt="image-20211225225341864"></p><p>TCP 第二次握手</p><p>​    服务器返回确认包，标志位为 SYN,ACK 将确认序号为 SN(0) +NSN(1) = ACK(1)</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225400586.png" alt="image-20211225225400586"></p><p>TCP 第三次握手</p><p>客户端确定收到服务器发来的 确认包 1 </p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225414669.png" alt="image-20211225225414669"></p><p>数据链路层 以太网</p><p>属于 目标MAC地址为 58：25：75：a5：2f：a7</p><p>源 MAC 地址为：74：86：7a：56：3c：f9</p><p>类型为 IP 数据包</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225456503.png" alt="image-20211225225456503"></p><p>网络层</p><p>版本为 IPv4</p><p>头部数据长度为 20 字节</p><p>Fragment的偏移量为 0 </p><p>Headr Checksum 为头部校验和</p><p>目标IP地址为：124.225.206.22 ，源 IP 地址为：192.168.21.2</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225539744.png" alt="image-20211225225539744"></p><p>传输层</p><p>目标端口为2456 </p><p>源端口为 80</p><p>Acknowledgment Number 为1表示数据包收到，确认有效</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225225553061.png" alt="image-20211225225553061"></p><p>Window表示窗口大小为 516 字节</p><p>TCP握手类似打电话</p><p>​    比如张三给你李四打电话</p><p>​       张三：喂，我是张三，你是李四吗？</p><p>​       李四：我是李四，你能听到吗？</p><p>​       张三：我能听到</p><p>​    至此他们之间建立了连接</p><p>分析4次挥手</p><p><code>curl -v check.amazonaws.com</code></p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225230651274.png" alt="image-20211225230651274" style="zoom: 200%;"><p>\1.  发起关闭的 是 客户端 先发送了一个 FIN, ACK 的FIN,ACK seq=2，ACK=2</p><p>\2.  第二次服务端给 客户端发送 ACK seq=1 ack=3</p><p>\3.  第三次客户端发给服务端 FIN, ACK seq=1 ACK=3</p><p>\4. 第四次客户端发给服务端 FIN, ACK seq=3 ACK=1</p><p>二. DNS</p><p><code>nslookup 网址</code></p><p>整个DNS报文分3部分，基础结构部分，问题部分，资源记录部分</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231045499.png" alt="image-20211225231045499"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231048702.png" alt="image-20211225231048702"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231053777.png" alt="image-20211225231053777"></p><p>1..事务ID（Transaction ID）请求报⽂和其对应的应答报⽂，这个字段的值是相同的。</p><p>\2. 标志(Flags)：DNS 报⽂中的标志字段</p><p>\3. 问题计数（Questions）：DNS 查询请求的数⽬</p><p>\4. 回答资源记录数(Answres RRs)：DNS 响应的数⽬</p><p>\5. 权威名称服务器计数(Authority RRs)：权威名称服务器的数⽬</p><p>\6. 附加资源记录数(Additional)：额外的记录数⽬（权威名称服务器对应 IP 地址的数⽬）</p><p>​    QR(Respons):查询或请求标志信息，查询时：0响应时：1</p><p>​    Opcode：操作码，0表示标志查询，1表示反向查询，2表示服务器状态请求</p><p>​    AA（Authoritative）:授权应答，值为1时表示该服务器是权威的服务器，0表示不是权威服务器</p><p>​    TC（Truncated）:表示是否被截断，1为响应超过512字节并被截断</p><p>​    RD（Recursion Desired）:表示这个字段在一个查询中的设置，并且响应中返回。标志为告诉名称服务器必须处理这个查询，这种方式是一种递归查询，值为0时，且请求的名称服务器没有一个授权回答，将返回一个能解答该查询的其他服务器列表</p><p>​    RA（Recursion Available）:这个字段只出现在响应报文中，为1时表示服务器支持递归查询</p><p>​    Z：保留字段，所有的请求和应答报文中，这个值必须为0</p><p>​    rcode(Reply code)：返回码字段，表示响应的差错状态</p><p>​       为0时：没有错误</p><p>​       为1时：有格式错误</p><p>​       为2时：服务器的原因无法处理这个请求</p><p>​       为3时：名字错误，解析的域名不存在</p><p>​       为4时：域名服务器不支持查询类型</p><p>​       为5时：服务器配置策略拒绝回应</p><p>​       为6-15时 保留值</p><p>三. UDP</p><p><code>ping 网站</code>                //    ping 发出的是 ICMP 包</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231138399.png" alt="image-20211225231138399"></p><p><img src="../img/image-20211225231145250.png" alt="image-20211225231145250"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231156336.png" alt="image-20211225231156336"></p><p>​    UDP 是无连接的，即时发送数据之前不需要建立连接</p><p>​    UDP 最大努力传输，不保证可靠</p><p>​    UDP 面向报文，没有拥塞控制，适合多媒体或游戏通信要求</p><p>​    UDP 支持1对1，1对多，多对1和多对多的通信</p><p>​    UDP 首部开销小</p><p>四. DHCP</p><p>释放IP</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231217203.png" alt="image-20211225231217203"></p><p>获取IP</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231224233.png" alt="image-20211225231224233"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231244528.png" alt="image-20211225231244528"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231248893.png" alt="image-20211225231248893"></p><p>获取IP过程</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231304482.png" alt="image-20211225231304482"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231309188.png" alt="image-20211225231309188"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231315479.png" alt="image-20211225231315479"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231320198.png" alt="image-20211225231320198"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231325853.png" alt="image-20211225231325853"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225231331629.png" alt="image-20211225231331629"></p><p>一个完整的DHCP过程中，ID保持不变</p><p>模拟服务器发送offer 报文的过程需要注意的地方</p><p>​       保证服务器与客户端的连通</p><p>​       准备好一个offer报文，可以自己编辑</p><p>​       使用wireshark抓客户端发的Discover报文时，确定当前客户端随机出的Transaction的ID</p><p>​       更改offer报文中的Transaction ID 与Discover报文中一致</p><p>​       使用发包软件发送offer报文</p><p>地址租期</p><p>DHCP服务器提供的每个IP地址都有相应的租用期，在Offer报文中的IP Address Lease Time中可以看到。地址租期时间过长会导致地址资源长期被占用，租期过短会导致DHCP请求包过多，增加网络负担。还要结合当前使用场景来设置。一般来说，对DHCP客户端数量较大，且断开网络比较频繁的场所，如机场、商铺等，一般把DHCP租期配置较短，这样IP地址能很快被回收。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;nc -lvnp 8080                        nc 127.0.0.1 8080&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/image-202</summary>
      
    
    
    
    
    <category term="TCP" scheme="http://aisibuhuipao.github.io/tags/TCP/"/>
    
    <category term="UDP" scheme="http://aisibuhuipao.github.io/tags/UDP/"/>
    
    <category term="DHCP" scheme="http://aisibuhuipao.github.io/tags/DHCP/"/>
    
    <category term="DNS" scheme="http://aisibuhuipao.github.io/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>GNS3-分网段</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/GNS3-%E5%88%86%E7%BD%91%E6%AE%B5/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/GNS3-%E5%88%86%E7%BD%91%E6%AE%B5/</id>
    <published>2021-12-25T14:42:51.000Z</published>
    <updated>2021-12-25T14:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gns3完成两个网段之间的主机互相通信"><a href="#gns3完成两个网段之间的主机互相通信" class="headerlink" title="gns3完成两个网段之间的主机互相通信."></a>gns3完成两个网段之间的主机互相通信.</h1><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225224647100.png" alt="image-20211225224647100"></p><h2 id="文字版"><a href="#文字版" class="headerlink" title="文字版"></a>文字版</h2><p>PC-1: ip 192.168.10.10/24 192.168.10.1</p><p>PC-2:: ip 192.168.10.20/24 192.168.10.1</p><p>PC-4: ip 172.20.30.40/24 172.20.30.1</p><p>PC-3: ip 172.20.30.30/24 172.20.30.1</p><p>PC-5: ip10.10.10.10/16 10.10.0.1</p><p>PC-6: ip 10.10.10.20/16 10.10.0.1</p><p>R-1 : configure terminal</p><p>​     Interface f1/1</p><p>​     Ip address 192.168.10.1 255.255.255.0</p><p>​     no shutdown</p><p>​     exit</p><p>​     interface f1/0</p><p>​     ip address 172.20.30.1 255.255.255.0</p><p>​     no sh</p><p>​     exit</p><p>​     interface f0/0</p><p>​     ip address 10.200.10.30 255.255.255.0</p><p>​     no sh</p><p>​     exit</p><p>​     ip route 10.10.0.0 255.255.0.0 10.200.10.10</p><p>​     exit</p><p>R-2: confeigure terminal</p><p>​    Interface f1/0</p><p>​    Ip address 10.10.0.1 255.255.0.0</p><p>​    no sh</p><p>​    exit</p><p>​    interface f0/0</p><p>​    ip address 10.200.10.10 255.255.255.0</p><p>​    no sh</p><p>​    exit</p><p>​    ip route 192.168.10.0 255.255.255.0 10.200.10.30</p><p>​    exit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gns3完成两个网段之间的主机互相通信&quot;&gt;&lt;a href=&quot;#gns3完成两个网段之间的主机互相通信&quot; class=&quot;headerlink&quot; title=&quot;gns3完成两个网段之间的主机互相通信.&quot;&gt;&lt;/a&gt;gns3完成两个网段之间的主机互相通信.&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Gns3" scheme="http://aisibuhuipao.github.io/tags/Gns3/"/>
    
  </entry>
  
  <entry>
    <title>子网划分</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/</id>
    <published>2021-12-25T14:33:40.000Z</published>
    <updated>2021-12-25T14:33:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么进行子网划分<br>减少网络流量，无论什么样的流量，我们都希望它少些，网络流量亦如此。如果没有可信赖的路由器，网络流量可能导致整个网络停顿，但有了路由器后，大部分流量都将呆在本地网络内，只有前往其他网络的分组将穿越路由器。路由器增加广播域，广播域越多，每个广播轻松划分子网域就越小，而每个网段的网络流量也越少。</p><p>优化网络性能，这是减少网络流量的结果。</p><p>简化管理，与庞大的网络相比，在一系列相连的小网络中找出并隔离网络问题更容易。</p><p>有助于覆盖大型地理区域，WAN链路比LAN链路的速度慢得多，且更昂贵;单个大跨度的大型网络在前面说的各个方面都可能出现问题，而将多个小网络连接起来可提高系统的效率。<br>明确需求<br>我们创建子网的时候，一定是根据一定的要求创建的，这个要求就是我们实际的网络需求。一般我们按如下步骤来明确我们的网络需求：</p><p>子网简单算法</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223656140.png" alt="image-20211225223656140"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223709974.png" alt="image-20211225223709974"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223720591.png" alt="image-20211225223720591"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223736105.png" alt="image-20211225223736105"></p><p>我还不会算二进制 - __-!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为什么进行子网划分&lt;br&gt;减少网络流量，无论什么样的流量，我们都希望它少些，网络流量亦如此。如果没有可信赖的路由器，网络流量可能导致整个网络停顿，但有了路由器后，大部分流量都将呆在本地网络内，只有前往其他网络的分组将穿越路由器。路由器增加广播域，广播域越多，每个广播轻松划分</summary>
      
    
    
    
    
    <category term="子网" scheme="http://aisibuhuipao.github.io/tags/%E5%AD%90%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>GNS-3安装</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/GNS-3/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/GNS-3/</id>
    <published>2021-12-25T14:24:11.000Z</published>
    <updated>2021-12-25T14:24:11.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>双击开始安装</p><p> <img src="https://s2.loli.net/2021/12/25/x9sQYlWJXOUIDyi.png" alt="image-20211225222509907"></p></li></ol><p>​    2.这里红框内的选项是必选的，其他的可以不选，也可以都勾选，都勾选的话，安装的时候会下载，会很慢，然后点 Next</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222759779.png" alt="image-20211225222759779"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222811158.png" alt="image-20211225222811158"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222821864.png" alt="image-20211225222821864"></p><p>​    3.刚刚组件哪里勾选了 GNS3 VM 就会出现红框内容，然后 next</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222840094.png" alt="image-20211225222840094"></p><p>​    4.安装到这里的时候需要注意一下</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225222923651.png" alt="image-20211225222923651"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223006828.png" alt="image-20211225223006828"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223015049.png" alt="image-20211225223015049"></p><p>​    5.完成安装后，打开软件会有初始配置</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223037740.png" alt="image-20211225223037740"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223047503.png" alt="image-20211225223047503"></p><p>​        这里表示连接成功了</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223111024.png" alt="image-20211225223111024"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223122610.png" alt="image-20211225223122610"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223129823.png" alt="image-20211225223129823"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223139049.png" alt="image-20211225223139049"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223148148.png" alt="image-20211225223148148"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223201070.png" alt="image-20211225223201070"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223214908.png" alt="image-20211225223214908"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225223221273.png" alt="image-20211225223221273"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双击开始安装&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://s2.loli.net/2021/12/25/x9sQYlWJXOUIDyi.png&quot; alt=&quot;image-20211225222509907&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​</summary>
      
    
    
    
    
    <category term="Gns3" scheme="http://aisibuhuipao.github.io/tags/Gns3/"/>
    
  </entry>
  
  <entry>
    <title>win服务器搭建网站</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/win%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/win%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</id>
    <published>2021-12-25T13:54:10.000Z</published>
    <updated>2021-12-25T13:54:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.在<a href="https://down.chinaz.com/soft/29129.htm%E4%B8%8B%E8%BD%BD%E6%A0%A1%E6%97%A0%E5%BF%A7%E6%95%99%E5%B8%88%E8%AF%84%E4%BB%B7%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81">https://down.chinaz.com/soft/29129.htm下载校无忧教师评价系统源码</a></p><p><img src="https://s2.loli.net/2021/12/25/t56m3iqjYDZGbse.png" alt="image-20211225215610047"></p><p><img src="https://s2.loli.net/2021/12/25/pSotXOTAfz3QWHI.png" alt="image-20211225215649656"></p><p><img src="https://s2.loli.net/2021/12/25/R8Y5CX31PLDfgQ6.png" alt="image-20211225215715030"></p><p><img src="https://s2.loli.net/2021/12/25/sVAPZBCqeorUOxf.png" alt="image-20211225220107518"></p><p><img src="https://s2.loli.net/2021/12/25/1m9sAzM8LfH2JG7.png" alt="image-20211225220142873"></p><p>至此就算是成功了，接下来，安装一个自己下的网站源码试试</p><p><img src="https://s2.loli.net/2021/12/25/jRqQcCiY7yHhLVt.png" alt="image-20211225220242402"></p><p><img src="https://s2.loli.net/2021/12/25/JyfhXmdOx6n73bC.png" alt="image-20211225220302892"></p><p><img src="https://s2.loli.net/2021/12/25/slBnRvty1XhdZug.png" alt="image-20211225220314980"></p><p><img src="https://s2.loli.net/2021/12/25/7uKLJEOfM9SNFVp.png" alt="image-20211225220340668"></p><p>这里新建的是网站源码的起始文件，在网站根目录下</p><p><img src="../../../img/image-20211225220708845.png" alt="image-20211225220708845"></p><p><img src="../../../img/image-20211225220729622.png" alt="image-20211225220729622"></p><p><img src="../../../img/image-20211225220743198.png" alt="image-20211225220743198"></p><p><img src="../../../img/image-20211225220751314.png" alt="image-20211225220751314"></p><p>如果发现没有打不开网站，可能端口被占用，可以在应用程序池里将占用端口的服务停止</p><p>或者可能是没有文件权限，在网站根目录下，右键网站文件夹，将IIS或者Every one 加入到管理员权限组里面</p><p>2.修改数据库</p><p>​    将网站的 access 数据库迁入 mysql 数据库中</p><p><img src="https://s2.loli.net/2021/12/25/CpzAjOeg3YkJFsu.png" alt="image-20211225221721119"></p><p><img src="https://s2.loli.net/2021/12/25/Et7dKfJLkPQFSoe.png" alt="image-20211225222302455"></p><p><img src="https://s2.loli.net/2021/12/25/5RMpUfyBFNe2vIr.png" alt="image-20211225221810570"></p><p>​    <img src="../../../img/image-20211225221342526.png" alt="image-20211225221342526"></p><p><img src="https://s2.loli.net/2021/12/25/H6O9ocKgtdzyxap.png" alt="image-20211225221400956"></p><p><img src="https://s2.loli.net/2021/12/25/OY6uwMcU5hxr2KW.png" alt="image-20211225221412994"></p><p><img src="https://s2.loli.net/2021/12/25/nmN4Mj6uyKblPf2.png" alt="image-20211225221424717"></p><p><img src="../../../img/image-20211225221454303.png" alt="image-20211225221454303"></p><p><img src="../../../img/image-20211225221504021.png" alt="image-20211225221504021"></p><p><img src="../../../img/image-20211225221525800.png" alt="image-20211225221525800"></p><p><img src="../../../img/image-20211225221552813.png" alt="image-20211225221552813"></p><p>服务器浏览器版本太低，需要在外面浏览器测试</p><p>在网站根目录下</p><p><img src="https://s2.loli.net/2021/12/25/OIGXJ2z8bg1yV6D.png" alt="image-20211225222127139"></p><p><img src="../../../img/image-20211225221629946.png" alt="image-20211225221629946"></p><p>end</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.在&lt;a href=&quot;https://down.chinaz.com/soft/29129.htm%E4%B8%8B%E8%BD%BD%E6%A0%A1%E6%97%A0%E5%BF%A7%E6%95%99%E5%B8%88%E8%AF%84%E4%BB%B7%E7%B3</summary>
      
    
    
    
    
    <category term="windows" scheme="http://aisibuhuipao.github.io/tags/windows/"/>
    
    <category term="数据库" scheme="http://aisibuhuipao.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>路由</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E8%B7%AF%E7%94%B1/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E8%B7%AF%E7%94%B1/</id>
    <published>2021-12-25T13:51:40.000Z</published>
    <updated>2021-12-25T13:51:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_0939.JPG" alt="IMG_0939"></p><p>实验要求：要求以下全部使用标准ACL实现</p><p>​     1.要求10网段禁止访问整个50网段，访问其他不受限制</p><p>​     2.要求10.1.1.1禁止访问40网段，其他不受影响</p><p>​     3.要求40.1.1.1禁止访问50网段，其他不受影响</p><p>拓补图</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image002.jpg" alt="img"></p><p>配置</p><p>PC0：ip 192.168.10.10/24 192.168.10.1</p><p>PC1：ip 192.168.10.20/24 192.168.10.1</p><p>PC2：ip 192.168.50.10/24 192.168.50.1</p><p>PC3：ip 192.168.50.20/24 192.168.50.1</p><p>PC4：ip 192.168.40.20/24 192.168.40.1</p><p>PC5：ip 192.168.40.10/24 192.168.40.1</p><p>R1:</p><p>R1&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R1</p><p>​    intface g0/0</p><p>​    ip address 192.168.10.1 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/1</p><p>​    ip address 192.168.20.10 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    ip route 0.0.0.0 0.0.0.0 192.168.20.20</p><p>​    exit</p><p>R3:</p><p>​    R3&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R3</p><p>​    intface g0/1</p><p>​    ip address 192.168.40.1 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/0</p><p>​    ip address 192.168.30.20 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    ip route 0.0.0.0 0.0.0.0 192.168.30.10</p><p>​    exit</p><p>R2：</p><p>​    R2&gt;：enable</p><p>​    configure terminal</p><p>​    hostname R2</p><p>​    intface g0/0</p><p>​    ip address 192.168.20.20 255.255.255.0</p><p>​    no shutdown</p><p>​    exit</p><p>​    intface g0/1</p><p>​    ip address 192.168.30.10 255.255.255.0</p><p>​    no shutdown</p><p>​    intface g0/2</p><p>​    ip address 192.168.50.1 255.255.255.0</p><p>​    no shutdown</p><p>exit</p><p>​    ip route 192.168.10.0 255.255.255.0 192.168.20.10</p><p>​    ip route 192.168.40.0 255.255.255.0 192.168.30.20</p><p>​    exit</p><p>全通之后建立ACL表禁止</p><p>​    R1：configure terminal</p><p>​       access-list 10 deny 192.168.0.0 0.0.255.255</p><p>​       intface g0/0</p><p>​       ip access-group 10 in</p><p>​    R3：configure terminal</p><p>​       access-list 10 deny 192.168.0.0 0.0.255.255</p><p>​       interface g0/1</p><p>​       ip access-group 10 in</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image004.jpg" alt="img"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/clip_image006.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_0939.JPG&quot; alt=&quot;IMG_0939&quot;&gt;&lt;/p&gt;
&lt;p&gt;实验要求：要求以下全部使用标准ACL实现&lt;/p&gt;
&lt;p&gt;​     </summary>
      
    
    
    
    
    <category term="路由" scheme="http://aisibuhuipao.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建部署到github</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/hexo%E6%90%AD%E5%BB%BA/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/hexo%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-25T08:53:27.000Z</published>
    <updated>2021-12-25T08:53:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>软件安装</p><p><a href="https://nodejs.org/en/">node.js</a> 安装后 node -v </p><p><a href="https://git-scm.com/download/win">git</a> 安装后 git -v</p><p>打开git 命令行窗口输入,完成后 cnpm -v</p><p><code>npm install -g cnpm --registry==https://registry.npm.taobao.org</code></p><p>安装hexo</p><p><code>cnpm install -g hexo-cli</code>    完成后 hexo -v</p><p>搭建 hexo 博客</p><p>1.在电脑里随便哪个盘符新建文件夹myblog(名字随便)</p><p>2.进入刚刚新建的文件夹，右键打开 git bash here</p><p>​        <code>hexo init</code>        初始化后会自动下载一些文件到这个目录</p><p>3.<code>hexo g</code>生成和<code>hexo s</code>启动服务</p><p>4.hexo s 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以可看到内容</p><p>5.<a href="https://hexo.io/themes/">在这里</a>选择一个喜欢的主题下载到本地</p><p>6.将主题解压只博客根目录下的 themes 文件夹下</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171007003.png" alt="image-20211225171007003"></p><p>7.打开博客根目录下的 _config.yml 文件，在里面找到 theme: (冒号后面改成主题的文件夹名字)</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171519410.png" alt="image-20211225171519410"></p><p><img src="https://s2.loli.net/2021/12/25/KZUlnzDOadV4ih5.png" alt="image-20211225212255378"></p><p>​            theme:后面填下载主题的文件夹名字</p><p>​            repo:后面输入仓库地址，不清楚的话，仓库地址在下图</p><p>​            <img src="https://s2.loli.net/2021/12/25/5IaEk27ciNM6qbw.png" alt="image-20211225212519454"></p><p>​            branch:后面输入仓库分支，master</p><p>8.执行 <code>hexo clean &amp;&amp; hexo g</code>    清理缓存，然后<code>hexo s</code> 查看效果</p><p>9.修改主题内容可以参考主题作者的github文档</p><p>部署到github</p><p>1.在github上新建一个仓库，每个ID只能建一个仓库来用作域名</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225171847503.png" alt="image-20211225171847503"></p><p><img src="https://s2.loli.net/2021/12/25/yuUHFWnvbdIPzSh.png" alt="image-20211225210322079"></p><p>配置SSH免密登录</p><p>提交代码的时候需要你github的权限，每次打密码不方便也不安全，所以使用SSH来解决这个问题</p><p>​    1.找到C:\Users\as\ssh,这个文件夹并删除</p><p>​    2.然后右键打开git bash here 输入命令：<code>ssh-keygen -t rsa -C github xxxxxxx@000.com(注册github的邮件地址)</code>，生成密钥，连续敲三次回车，出现下图，代表成功。</p><p><img src="https://s2.loli.net/2021/12/25/2z7xgERQ6yTAsjD.png" alt="image-20211225213650448"></p><p>​    3.最后生成一个新的ssh文件夹，找到 ssh\id_rsa.pub 文件，打开后复制里面的密钥内容。</p><p>​    4.打开github主页</p><p>​    <img src="https://s2.loli.net/2021/12/25/1FHlSgVfzOdaMUm.png" alt="image-20211225211318194"></p><p><img src="https://s2.loli.net/2021/12/25/ZyusHmliaMzqDtr.png" alt="image-20211225211339158"></p><p><img src="https://s2.loli.net/2021/12/25/PdpKTjAY4MQFJV9.png" alt="image-20211225211356823"></p><p>​    <img src="https://s2.loli.net/2021/12/25/YeFz6GLKxfqryXl.png" alt="image-20211225211421951"></p><p>​    粘贴内容，点击绿色的图标</p><p>​    5.测试是否成功</p><p>​    输入<code>ssh -T git@github.com </code></p><p>​    如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><p>​    Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access </p><p>​    看到这个信息，说明已经成功了。</p><p>​    6.配置仓库</p><p>​    <code>git config --global user.name "username" </code>        双引号里面的内容添自己的github的用户名</p><p>​    <code>git config --global user.email  "xxx@qq.com" </code>        双引号里面的内容添自己注册github的邮箱</p><p>​    7.最后在博客的根目录下，打开DOS窗口或者右键打开 github bash here 输入命令</p><p>​    <code>hexo clean &amp;&amp; hexo g</code></p><p>​    推到自己的仓库</p><p>​    <code>hexo d</code></p><p>​    浏览器中输入自己的github地址，查看自己的博客吧。</p><p>​    其他命令：</p><p>​    <code>hexo new "xxx"</code>        新建博客文档</p><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;软件安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt; 安装后 node -v &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;git&lt;/a&gt; 安装后 git -</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://aisibuhuipao.github.io/tags/hexo/"/>
    
    <category term="github" scheme="http://aisibuhuipao.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>LAMP搭建</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/LAMP%E6%90%AD%E5%BB%BA/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/LAMP%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-25T08:08:50.000Z</published>
    <updated>2021-12-25T08:08:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>yum安装apache+php+mysql，配置开机自启</p><p><code>yum install -y httpd mariadb-server php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml</code></p><p>配置防火墙开机不启动</p><p><code>systemctl disable firewalld</code></p><p>停止防火墙</p><p><code>systemctl stop firewalld</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160955245.png" alt="image-20211225160955245"></p><p>设置数据库开机启动</p><p><code>systemctl enable mariadb</code></p><p><code>systemctl start mariadb</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225161605939.png" alt="image-20211225161605939"></p><p>编辑文件 使 apache 网页显示php基本信息</p><p><code>vim /var/www/heml/index.php</code></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line">phpinfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>打开网页看看<img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162322514.png" alt="image-20211225162322514"></p><p>编辑配置文件关闭SElinux安全模块</p><p><code>vim /etc/sysconfig/selinux</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162010980.png" alt="image-20211225162010980"></p><p>配置mysql </p><p><code>mysql_secure_installation</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162104003.png" alt="image-20211225162104003"></p><p>是否设置root 密码        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162356614.png" alt="image-20211225162356614"></p><p>是否删除匿名用户        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162424048.png" alt="image-20211225162424048"></p><p>是否允许root远程登录        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162456282.png" alt="image-20211225162456282"></p><p>是否删除测试数据库        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162513236.png" alt="image-20211225162513236"></p><p>是否刷新权限        y</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162530272.png" alt="image-20211225162530272"></p><p>登录mysql</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225162547106.png" alt="image-20211225162547106"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;yum安装apache+php+mysql，配置开机自启&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install -y httpd mariadb-server php php-mysql php-common php-gd php-mbstring php-mcrypt php</summary>
      
    
    
    
    
    <category term="LAMP" scheme="http://aisibuhuipao.github.io/tags/LAMP/"/>
    
    <category term="apache" scheme="http://aisibuhuipao.github.io/tags/apache/"/>
    
    <category term="php" scheme="http://aisibuhuipao.github.io/tags/php/"/>
    
    <category term="mysql" scheme="http://aisibuhuipao.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>源码安装nginx</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx/</id>
    <published>2021-12-25T07:52:53.000Z</published>
    <updated>2021-12-25T07:52:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>源码安装nginx，下载html源代码，把源代码运行起来。</p><p>在<a href="http://nginx.org/download/nginx-1.20.2.tar.gz%E4%B8%8B%E8%BD%BD%E6%9C%AC%E5%9C%B0">http://nginx.org/download/nginx-1.20.2.tar.gz下载本地</a></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155336921.png" alt="image-20211225155336921"></p><p>在文件存放目录右键打开终端</p><p><code>scp .\nginx-1.28.2.tar.gz root@192.168.3.128:/root</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155357240.png" alt="image-20211225155357240"></p><p>解压</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155424411.png" alt="image-20211225155424411"></p><p>./ 运行configure</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155458169.png" alt="image-20211225155458169"></p><p>错误提示：没有PCRE库</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155511400.png" alt="image-20211225155511400"></p><p>安装 gcc pcre pcre-devel 库</p><p><code>yum install -y gcc pcre pcre-devel zlib liberary</code></p><p>配置目录</p><p>/uer/bin/ = 软件二进制文件</p><p>/etc/xxx.conf = 软件的配置文件</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160429417.png" alt="image-20211225160429417"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225155833639.png" alt="image-20211225155833639"></p><p>将nginx 启动文件安装到/usr/bin/nginx 下</p><p>将nginx 配置文件安装到/etc/nginx/ 下</p><p><code>./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160457547.png" alt="image-20211225160457547"></p><p>编译安装</p><p>安装过程中至结束没有显示错误表示安装成功</p><p><code>make &amp;&amp; make install</code></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160619191.png" alt="image-20211225160619191"></p><p>启动</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160647403.png" alt="image-20211225160647403"></p><p>关闭防火墙测试</p><p>systemctl stop firewalld</p><p>测试是否成功开启服务</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225160730366.png" alt="image-20211225160730366"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;源码安装nginx，下载html源代码，把源代码运行起来。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;http://nginx.org/download/nginx-1.20.2.tar.gz%E4%B8%8B%E8%BD%BD%E6%9C%AC%E5%9C%B0&quot;&gt;http://</summary>
      
    
    
    
    
    <category term="nginx" scheme="http://aisibuhuipao.github.io/tags/nginx/"/>
    
    <category term="LNMP" scheme="http://aisibuhuipao.github.io/tags/LNMP/"/>
    
  </entry>
  
  <entry>
    <title>Vim基础</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/Vim%E5%9F%BA%E7%A1%80/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/Vim%E5%9F%BA%E7%A1%80/</id>
    <published>2021-12-25T07:44:36.000Z</published>
    <updated>2021-12-25T07:44:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vim基础命令</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154521878.png" alt="image-20211225154521878"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154532563.png" alt="image-20211225154532563"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154547117.png" alt="image-20211225154547117"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154618354.png" alt="image-20211225154618354"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154627549.png" alt="image-20211225154627549"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154634592.png" alt="image-20211225154634592"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154715657.png" alt="image-20211225154715657"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154727390.png" alt="image-20211225154727390"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Vim基础命令&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154521878.png&quot; alt=&quot;image-2021122515452187</summary>
      
    
    
    
    
    <category term="命令" scheme="http://aisibuhuipao.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Vim" scheme="http://aisibuhuipao.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础命令</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</id>
    <published>2021-12-25T07:34:45.000Z</published>
    <updated>2021-12-25T07:34:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_1773.JPG" alt="IMG_1773"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153600700.png" alt="image-20211225153600700"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153721923.png" alt="image-20211225153721923"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153721923.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153805828.png" alt="image-20211225153805828"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153816344.png" alt="image-20211225153816344"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153816344.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153845073.png" alt="image-20211225153845073"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153857001.png" alt="image-20211225153857001"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153906435.png" alt="image-20211225153906435"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153956501.png" alt="image-20211225153956501"><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154032287.png" alt="image-20211225154032287"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154235670.png" alt="image-20211225154235670"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154253661.png" alt="image-20211225154253661"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154302395.png" alt="image-20211225154302395"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154311528.png" alt="image-20211225154311528"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154321188.png" alt="image-20211225154321188"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154333980.png" alt="image-20211225154333980"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225154345404.png" alt="image-20211225154345404"></p><p> 网络类</p><p>​    查看网卡信息</p><p>​    <code>ip addr</code></p><p>​    查看路由信息&amp;默认网关</p><p>​    <code>ip route</code></p><p>​    查看网卡信息（老系统）</p><p>​    <code>ifconfig</code></p><p>​    查看本机开发的TCP和UDP端口</p><p>​    <code>netstat -antlp</code></p><p>​    <code>netstat -anulp</code></p><p>​    （-a:显示所有， -n:不解析服务名称， t:仅显示tcp信息， -u:仅显示udp信息）</p><p>​    查看正在监听的端口</p><p>​    <code>ss -antlp</code>和netstat类似，但是比netstat更快</p><p>​    查看路由跳点（可以看到路由都经过哪些地址最终到达目标地址）</p><p>​    TRACERT （windows：必须大写）</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225163324758.png" alt="image-20211225163324758"></p><p>​    查询域名ip地址信息 </p><p>​    <code>nslookup baidu.com</code></p><p>服务类</p><p>​    查看系统进程</p><p>​    <code>ps -aux</code> （通常和kill -9一起使用&amp;最常用法是：ps -ef | grep xxx:查询某个关键字）         a:显示所有程序         u:以用户为主的格式来显示         x:显示所有程序，不以终端机来区分 </p><p>ps看到的是命令执行瞬间的进程信息,而top可以持续的监视 </p><p>ps只是查看进程,而top还可以监视系统性能,如平均负载,cpu和内存的消耗</p><p><code>top</code></p><p>top还可以操作进程,如改变优先级(命令r)和关闭进程(命令k) top主要看cpu,内存使用情况，及占用资源最多的进程由高到低排序，关注点在 于资源占用情况，但是查看内存占用是不准确的</p><p>查看内存： </p><p><code>free -h</code>       自动转换单位(常用)</p><pre><code>     -b         Byte显示</code></pre><p>​        -k          KB显示</p><p>​        -m         MB显示</p><p>​        -g          GB显示</p><p>​        -o         不显示缓冲区 </p><p>​        -t         显示内存总和列</p><p>​        -s         间隔n秒，持续查看 内存总数 已使用总数 空闲内存 多个进程共享的内存</p><p>设置服务</p><p>​    systemctl </p><p>​        restart xxx //重启或这重新加载服务 </p><p>​        start //启动服务 </p><p>​        stop //停止服务，关机或重新启动会失效 </p><p>​        status //查看服务执行信息和有没有开机启动的信息 </p><p>​        enable //设置服务开机启动 </p><p>​        disable //设置服务开机不启动</p><p>结束进程</p><p>​     kill    </p><p>​         -1(HUP) 重载进程</p><p>​        -9(KILL) 杀死一个进程</p><p>​        -15(TERM) 正常停止进程</p><p>显示当前系统信息        </p><p>w</p><p>显示当前登录的用户</p><p>who</p><p>特殊操作 切换和隐藏程序执行窗口，只有主动停止或者关机重启，程序才会停止，有点类似windows的最 小化 在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始 流行的Linux发行版（例如Red Hat Enterprise Linux）通常会自带screen实用程序，如 果没有的话，可以从GNU screen的官方网站下载</p><p><code>yum install -y screen</code></p><p> <code>screen -ls</code>列出所有后台的会话</p><p><code>screen -S name1 vim</code> 给窗口命名</p><p><code>screen -r 窗口号</code>重新打开会话窗口</p><p>后台 control + a + d 切换窗口</p><p><code>screen -rd name1</code>将指定的窗口离线或恢复离线</p><p>后台挂起运行</p><p><code>nohup</code></p><p><code>nohup ping 8.8.8.8 &amp;</code>        //不加 &amp; 的话，关闭窗口会中断执行</p><p>fg 显示后台挂起的程序</p><p>显示目录文件大小</p><p>du 文件名</p><p>显示当前目录下的文件所占用的空间</p><p>du -sh</p><p>查看磁盘被占用的信息</p><p>df</p><p>防火墙(/etc/services)</p><p> <code>ystemctl start firewalld</code> 启动</p><p> <code>systemctl stop firewalld</code> 停止</p><p> <code>firewall-cmd --reload</code> 重新加载防火墙</p><p><code>firewall-camd --state</code> 查看运行状态</p><p><code>firewall-cmd --zone=public --list-ports </code> 显示当前允许通过的端口信息</p><p><code>firewall-cmd --zone=public --list-service</code> 显示当前允许通过的服务</p><p><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code> 允许哪个端口可以通过</p><p><code>firewall-cmd --zone=public --add-service=http --permanent</code> 允许哪个服务可以通过</p><p><code>firewall-cmd --zone=public --remove-port=http --permanent</code> 删除指定的端口</p><p>开启一个网页端的端口</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">8080</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aisibuhuipao/img/main/IMG_1773.JPG&quot; alt=&quot;IMG_1773&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubuserco</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://aisibuhuipao.github.io/tags/Linux/"/>
    
    <category term="命令" scheme="http://aisibuhuipao.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>centos7配置网卡为静态IP</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/centos7%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%E4%B8%BA%E9%9D%99%E6%80%81IP/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/centos7%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%E4%B8%BA%E9%9D%99%E6%80%81IP/</id>
    <published>2021-12-25T07:30:38.000Z</published>
    <updated>2021-12-25T07:30:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>1． 打开虚拟机后，桌面右键打开Open Terminal</p><p>2． 使用命令 su 切换到root账户</p><p>3． 用vim编辑器打开网卡配置文件</p><p>4． Vim /etc/sysconfig/network-scripts/ifcfg-ens33</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153113536.png" alt="image-20211225153113536"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153131923.png" alt="image-20211225153131923"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153131923.png"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153208160.png" alt="image-20211225153208160"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153225002.png" alt="image-20211225153225002"></p><p>5.然后按ESC然后按Shiftt+: 冒号进入命令行模式输入 “wq”保存退出</p><p>6.使用命令重启网卡 systemctl restart network</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225153250495.png" alt="image-20211225153250495"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1． 打开虚拟机后，桌面右键打开Open Terminal&lt;/p&gt;
&lt;p&gt;2． 使用命令 su 切换到root账户&lt;/p&gt;
&lt;p&gt;3． 用vim编辑器打开网卡配置文件&lt;/p&gt;
&lt;p&gt;4． Vim /etc/sysconfig/network-scripts/ifcfg-en</summary>
      
    
    
    
    
    <category term="centos7" scheme="http://aisibuhuipao.github.io/tags/centos7/"/>
    
    <category term="网卡配置" scheme="http://aisibuhuipao.github.io/tags/%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装</title>
    <link href="http://aisibuhuipao.github.io/2021/12/25/ubuntu/"/>
    <id>http://aisibuhuipao.github.io/2021/12/25/ubuntu/</id>
    <published>2021-12-25T07:16:20.000Z</published>
    <updated>2021-12-25T07:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在虚拟机安装ubuntu系统"><a href="#在虚拟机安装ubuntu系统" class="headerlink" title="在虚拟机安装ubuntu系统"></a>在虚拟机安装ubuntu系统</h1><p>\1.   先到 <a href="https://ubuntu.com/%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6">https://ubuntu.com/下载镜像文件</a></p><p>​         <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152032412.png" alt="image-20211225152032412"></p><p>​       <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152204645.png" alt="image-20211225152204645">        </p><p> \2.   下载完成后启动虚拟机</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152240480.png" alt="image-20211225152240480"></p><p>​        </p><pre><code>     ![image-20211225152255088](https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152255088.png)     ![image-20211225152320738](https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152320738.png)</code></pre><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152342209.png" alt="image-20211225152342209"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152358941.png" alt="image-20211225152358941"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152409445.png" alt="image-20211225152409445"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152422670.png" alt="image-20211225152422670"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152620102.png" alt="image-20211225152620102"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152447496.png" alt="image-20211225152447496"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152637502.png" alt="image-20211225152637502"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152657553.png" alt="image-20211225152657553"></p><pre><code>   建议安装时，语言选择英文，然后默认“下一步（continue）”即可完成安装</code></pre><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225152727579.png" alt="image-20211225152727579"></p><p>​        安装完成后，重新启动，即可正常使用 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在虚拟机安装ubuntu系统&quot;&gt;&lt;a href=&quot;#在虚拟机安装ubuntu系统&quot; class=&quot;headerlink&quot; title=&quot;在虚拟机安装ubuntu系统&quot;&gt;&lt;/a&gt;在虚拟机安装ubuntu系统&lt;/h1&gt;&lt;p&gt;\1.   先到 &lt;a href=&quot;http</summary>
      
    
    
    
    
    <category term="虚拟机" scheme="http://aisibuhuipao.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="ubuntu" scheme="http://aisibuhuipao.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Hugo第一次搭建博客</title>
    <link href="http://aisibuhuipao.github.io/2021/12/23/Hugo/"/>
    <id>http://aisibuhuipao.github.io/2021/12/23/Hugo/</id>
    <published>2021-12-23T10:10:01.461Z</published>
    <updated>2021-12-25T07:12:33.464Z</updated>
    
    <content type="html"><![CDATA[<p>一.环境安装</p><p>​    1. go语言</p><p>​    2. git</p><p>二.安装Hugo</p><p>​    1.到<a href="https://github.com/spf13/hugo/releases">Hugo Releases</a> 下载对应的操作系统版本的Hugo二进制文件</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219103422194.png" alt="image-20211219103422194"></p><p>​    2.将下载的压缩包解压到任意盘符的根目录下</p><p>​        2.1创建Hugo文件夹</p><p>​            1.创建一个新的文件夹,D:\Hugo</p><p>​            2.创建一个新的文件夹,D:\Hugo\bin</p><p>​            3.创建一个新的文件夹,D:\Hugo\myblog        </p><p>​        我是在D:盘目录下新建了一个Hugo的文件夹,解压到这个文件夹下</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219094839939.png"></p><p>​    3.设置环境变量</p><p>​        3.1把Hugo添加到path中，我的电脑（此电脑）右键属性，在高级里面，选择环境变量</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219103924062.png" alt="image-20211219103924062"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219104008570.png" alt="image-20211219104008570"></p><p>​        下面系统变量同上</p><p>​    4.部署Hugo</p><p>​        4.1验证Hugo的环境变量是否正确，打开CMD窗口（windows+r,输入cmd）运行 Hugo version</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219104402077.png" alt="image-20211219104402077"></p><p>​        4.2新生成一个博客站点（文件夹）红框里面的名字可以随意更改</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219105053824.png" alt="image-20211219105053824"></p><p>​        4.3这个myblog就是博客的根目录了</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219105331540.png" alt="image-20211219105331540"></p><p>5.给博客设置一个<a href="https://themes.gohugo.io/">主题</a></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219110020648.png" alt="image-20211219110020648"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219110504744.png" alt="image-20211219110504744"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219110541084.png" alt="image-20211219110541084">        </p><p>可以使用 git clone 下载，也可以点击下面的 Download ZIP 下载，解压到博客的主题目录下</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219110859540.png" alt="image-20211219110859540"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219111141465.png" alt="image-20211219111141465"></p><p>​        5.1 启动博客站点</p><p>​        在博客的根目下运行 m10c 是主题的 文件夹 名字</p><p>​        <code>hugo server -t m10c --buildDrafts</code></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219111623813.png" alt="image-20211219111623813"></p><p>​        5.3看见 <a href="http://localhsot:1313/">http://localhsot:1313/</a> 表示启动成功，输入到浏览器打开看看</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219111836541.png" alt="image-20211219111836541"></p><p>​        5.2在博客根目录下新建一篇文章</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219112523887.png" alt="image-20211219112523887"></p><p>​        ps:以.md结尾</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219112653753.png" alt="image-20211219112653753"></p><p>​    双击打开编辑或者右键指定记事本打开都可以，可以随意写点内容测试一下</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219113240436.png" alt="image-20211219113240436"></p><p>​    回到博客根目录下 打上面的启动命令 看看</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219113340282.png" alt="image-20211219113340282"></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219113358218.png" alt="image-20211219113358218"></p><p>​    ok.</p><p>三.部署到Github Page上</p><p>​    1.到<a href="github.com">Github</a>上注册一个账号，</p><p>​    2.新建一个仓库</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219114031785.png" alt="image-20211219114031785"></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219114704106.png" alt="image-20211219114704106"></p><p>​    Repository     name:的名字必须全小写且和你的昵称一样，然后点击下面绿色的创建</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219114952664.png" alt="image-20211219114952664"></p><p>此时是一个空的仓库</p><p>​    3.接下来把自己的博客部署到github上来</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219115733638.png" alt="image-20211219115733638"></p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219115822346.png" alt="image-20211219115822346"></p><p>博客的根目录下会生成一个 public  的文件夹，这个文件夹里面的文件就是自己博客的内容</p><ol start="4"><li><p>接下来把 public 这个文件夹传到自己 git 仓库，博客就可以在远程访问了</p><p> 先进入到 public 这个文件夹中</p><p> <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219120241839.png" alt="image-20211219120241839"></p><p> 然后 <code>git init</code> 进行初始化</p><p> <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219120337995.png" alt="image-20211219120337995"></p></li></ol><p>​      把所有文件加进去</p><p>​      <code>git add *</code></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219120510949.png" alt="image-20211219120510949"></p><p>​    然后提交</p><p>​    <code>git commit -m "随便起名字"</code></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219120807383.png" alt="image-20211219120807383"></p><p>​    5.GitHub关联本地的文件</p><p>​        <code>git remote add origin xxxxx.git</code></p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219123322136.png" alt="image-20211219123322136"></p><p>​    推到git 仓库上面去</p><p>​    <code>git push -u origin master</code></p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219124542741.png" alt="image-20211219124542741"></p><p>6.到自己的仓库看了一下有没有推成功，有文件表示成功</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219124650041.png" alt="image-20211219124650041"><a href="https://hexo.io/docs/one-command-deployment.html">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一.环境安装&lt;/p&gt;
&lt;p&gt;​    1. go语言&lt;/p&gt;
&lt;p&gt;​    2. git&lt;/p&gt;
&lt;p&gt;二.安装Hugo&lt;/p&gt;
&lt;p&gt;​    1.到&lt;a href=&quot;https://github.com/spf13/hugo/releases&quot;&gt;Hugo Releas</summary>
      
    
    
    
    
    <category term="Hugo" scheme="http://aisibuhuipao.github.io/tags/Hugo/"/>
    
  </entry>
  
  <entry>
    <title>转载编程随想</title>
    <link href="http://aisibuhuipao.github.io/2021/12/23/%E8%BD%AC%E8%BD%BD%E7%BC%96%E7%A8%8B%E9%9A%8F%E6%83%B3/"/>
    <id>http://aisibuhuipao.github.io/2021/12/23/%E8%BD%AC%E8%BD%BD%E7%BC%96%E7%A8%8B%E9%9A%8F%E6%83%B3/</id>
    <published>2021-12-23T09:23:00.000Z</published>
    <updated>2021-12-25T07:11:40.236Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客开张及本博客内容简介"><a href="#博客开张及本博客内容简介" class="headerlink" title="博客开张及本博客内容简介"></a><a href="https://program-think.blogspot.com/2009/01/test.html">博客开张及本博客内容简介</a></h1><p>很久以前就想开一个博客，可惜一直忙于工作中，不能如愿。<br>拜2008年的全球金融危机所赐，我不再像以前那么忙碌，终于能够抽时间把以前的一些经验和平时的一些心得体会写下来。<br>希望这个博客能够让读者有所收获。</p><p>初步考虑写如下一些方面的内容：<br>★对于开发人员的个人发展和成长的体会<br>主要介绍一些方法论相关的东东（比如：学习方法、思维方式、做事习惯等），毕竟“<strong>授人以鱼不如授人以渔</strong>”。<br>★关于 C++、Java、Python 语言<br>主要介绍和编程语言相关的开发经验。会比较侧重于开发跨平台，高性能、可扩展性方面的话题。<br>★关于软件工程<br>主要介绍软件工程相关的知识、项目管理的经验、复杂系统的架构设计等。<br>★关于管理<br>主要介绍企业管理相关的经验和职场心得。</p><p>如果有空，我也会顺便八卦一下 IT 业界的新动态。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;博客开张及本博客内容简介&quot;&gt;&lt;a href=&quot;#博客开张及本博客内容简介&quot; class=&quot;headerlink&quot; title=&quot;博客开张及本博客内容简介&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://program-think.blogspot.com/2009/0</summary>
      
    
    
    
    
    <category term="编程随想" scheme="http://aisibuhuipao.github.io/tags/%E7%BC%96%E7%A8%8B%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>来到杭州~</title>
    <link href="http://aisibuhuipao.github.io/2021/12/20/%E6%9D%AD%E5%B7%9E/"/>
    <id>http://aisibuhuipao.github.io/2021/12/20/%E6%9D%AD%E5%B7%9E/</id>
    <published>2021-12-20T02:07:44.000Z</published>
    <updated>2021-12-25T13:50:23.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这一周的生活"><a href="#这一周的生活" class="headerlink" title="这一周的生活"></a>这一周的生活</h1><p>​    自12月13号落地杭州之后对这边的一切都充满期待，也是第一次吃到包米饭的烧卖，不知道是不是我不习惯还是真的不好吃</p><p>​    赶到住宿的地方已经快22点了，见了室友聊了一会儿，一位99年的小孩，相处起来还不错。</p><p>​    第二天到学校报到，玩了一些小游戏，大家都互相介绍认识了一下。下午在老师带着大家安装了一些隔天上课需要的软件就结束了。</p><p>​    第一天我们学习了网络安全法，虚拟的安装与设置，安装 centos7 和 kali 还算简单一些，下午在虚拟机中安装 Ubuntu ，我这个破电脑安装了快2个小时才好，电脑配置不行，装好之后就不想再打开了。晚上的作业是在虚拟机中安装 Windows 2008 server emmm……还算简单~。 </p><p>​    第二个是把 centos 7 的IP 从动态改成静态，动态（DHCP）的配置在一些大企业里面不太适用，因为ip地址总是隔一段时间就会自动更换。改成静态地址就好多了：</p><p>​        1． 打开虚拟机后，桌面右键打开Open Terminal</p><p>​        2． 使用命令 su 切换到root账户</p><p>​        3． 用vim编辑器打开网卡配置文件</p><p>​        4． Vim /etc/sysconfig/network-scripts/ifcfg-ens33</p><p>​            <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219183551785.png" alt="image-20211219183551785"></p><p>​        第二次改成静态地址的时候，“GATEWAY”少打了个字母E，导致无法重启网卡，老师看了看说：你这地方少打个E。0.0‘</p><p>​    第二天我们学习了一些 Linux 系统的基本命令、bi和vim编辑的基本使用</p><p>一般linux系统里不会自带vim，需要安装<code>yun intall -y vim*</code>，通常安装完都需要再配置一下 vim /etc/vimrc。不过现在大部分linux系统都已经自带vim了。</p><p>​        <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219184835930.png" alt="image-20211219184835930">显示代码高亮的功能，off 是关闭</p><p>​    上午回顾了前一天的一些知识、作业的提交和一些基础的系统命令</p><ul><li><p>​    关机</p><ol><li>init 0</li><li>proweroff</li><li>shutdown -h now</li><li>halt（谨慎使用）</li></ol></li><li><p>​    重启</p><ol><li>init 6</li><li>reboot</li><li>shutdown -r now</li></ol></li><li><p>​    文件的增删改查</p><ol><li><p>​    touch 【选项】【参数】【文件名】//新建一个文件</p><ol><li>-t 修改特定时间    //常用</li><li>-a修改读取时间</li><li>-m只更改内容变动时间</li></ol></li><li><p>​    echo【字符串】&gt; 【文件名】//将字符串写入文件，没有文件则新建</p></li><li><p>​    cat 【路径/文件名】//查看文件内容，适合查看较小的文件</p></li><li><p>​    ls【-选项】【文件名】//显示指定路径下有那些文件和目录，<code>ll</code>显示所有</p><p> ​    -l显示目录或文件的具体信息    -a显示所有    -h以容易理解的格式显示信息</p></li><li><p>mkdir 【文件名】//新建文件夹或目录</p><p> ​    -p递归新建目录</p></li><li><p>./【路径/文件名】//执行一个文件</p></li><li><p>mv【路径/文件名】【路径】//移动一个文件</p><ol><li>mv【文件名】【文件名】//重命名</li></ol></li><li><p>cp【路径/文件名】【路径】//复制一个文件</p><ol><li>-r 递归复制目录</li></ol></li><li><p>cd 【绝对路径or相对路径】//进入一个目录</p></li><li><p>pwd    //查看当前位置</p></li><li><p>whoami    //查看当前登录的用户</p></li><li><p>id    //查看用户id</p></li><li><p>ip a    //查看网卡信息</p></li><li><p>more【文件名】//查看较大文件，回车是下一行，空格是下一页，Ctrl+B上一页，q 退出</p></li><li><p>head【文件名】//从文件头部开始查看</p><ol><li>-10，显示前10行内容</li></ol></li><li><p>tail【文件名】//从文件尾部开始查看</p><ol><li>-f，监听文件    -5f,监听文件且显示5行内容</li></ol></li><li><p>rm -rf 【文件名】//彻底删除文件</p><ol><li>rm -rf /*    //彻底删除整个系统文件！慎用！！！</li></ol></li><li><p>tree    //以树状查看目录结构</p><ol><li><code>yum install -y tree</code>来安装</li></ol></li><li><p>tar【选项】【gz或tar文件名】【文件】//打包、解包和压缩</p><ol><li>-cvf    //打包    -xvf    //解包</li><li>加 z 压缩    文件后面跟 -C 解包时指定路径</li></ol></li><li><p>zip 【文件名】   //压缩</p><ol><li>unzip【解压缩】</li><li><code>yum install -y zip</code>安装</li></ol></li><li><p>vim的使用，打开文件 vim /etc/vimrc</p><ol><li>w  //保存    wq  //保存退出    q!  //不保存退出    wq!  //强制保存退出</li><li>i    //进入编辑模式光标所在处<ol><li>I    //光标在行首进入</li><li>a    //光标后一位进入</li><li>A    //行首进入</li><li>o    //光标的下一行进入</li><li>O    //光标的上一行进入</li></ol></li><li>esc    //退出编辑模式</li><li>/【字符串】    //查找对应内容</li><li>N/n    //大N上跳，小n下跳</li><li>$    //移动至行尾</li><li>dd    //删除光标所在行</li><li>x    //剪切光标所在字母<ol><li>X    //剪切光标所在之前的字母</li></ol></li><li>u    //撤销之前的操作</li><li>g    //移动顶部<ol><li>G    //移动至底部</li></ol></li><li>v    //进入选择模式，Ctrl+v 进入块模式，可多行选中<ol><li>y    复制</li><li>p    光标下一行粘贴</li><li>P    光标上一行粘贴</li><li>块模式选中多行，i 进入编辑模式，按两次//后esc，可以多行注释，块模式选择多行 // 按 d 删除多行注释</li></ol></li><li>shift+:    进入底线命令模式<ol><li>set nu 显示行号</li></ol></li></ol></li></ol><p>  <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219195035117.png" alt="image-20211219195035117"></p><p>  一些常用的符号</p><ol><li>&amp;    //程序后台执行<ol><li>&amp;&amp;    //前面命令执行成功后，执行后一条命令</li></ol></li><li>|    //管道符，上一条命令的结果作为下一条命令的参数输入，输出结果<ol><li>||    //前一条命令执行失败后，依然执行下一条命令</li></ol></li><li>&gt;//重定向输出，会覆盖原文件内容<ol><li>&gt;&gt;    //重定向输出，不会覆盖原文件内容</li><li>&amp;&gt;    //将错误信息或者普通信息都重定向输出到文件</li></ol></li><li>fg    //将后台运行的程序调到前台</li></ol></li></ul><h2 id="Linux命令在Windows下对应命令"><a href="#Linux命令在Windows下对应命令" class="headerlink" title="Linux命令在Windows下对应命令"></a>Linux命令在Windows下对应命令</h2><p>​            </p><table><thead><tr><th>Linux命令</th><th>DOS命令</th></tr></thead><tbody><tr><td>ls</td><td>dir</td></tr><tr><td>vi</td><td>输文件名按回车即打开</td></tr><tr><td>cd</td><td>cd (可换目录不能换盘符)</td></tr><tr><td>pwd</td><td>cd (不带参数)</td></tr><tr><td>cp</td><td>copy</td></tr><tr><td>clear</td><td>cls</td></tr><tr><td>mv</td><td>rename或move</td></tr><tr><td>rm</td><td>del</td></tr><tr><td>$1 (命令行参数)</td><td>%1</td></tr><tr><td>touch (建空文件)</td><td>cd .&gt;</td></tr></tbody></table><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219200848201.png" alt="image-20211219200848201"></p><p>File: ‘ceshi1’ 文件所在路径</p><p>Size: 4096    Blocks: 8 文件占据的磁盘块     IO Block: 4096  directory 文件类型</p><p>Device: 801h/2049d 文件所在的设备名 Inode: 378 文件索引节点号    Links: 4 被硬链接的次数</p><p>Access: (0775/drwxrwxr-x) 文件的用户权限 Uid: ( 1000/houhaibo) 文件的属主ID及属主名 Gid: ( 1000/houhaibo)文件的属组及属组名</p><p>Access: 2017-02-27 00:00:00.000000000 -0800  文件的最近一次访问时间</p><p>Modify: 2016-12-25 22:48:47.523724399 -0800   文件的最近内容修改时间</p><p>Change: 2017-02-03 19:34:56.273575429 -0800  文件的最近元数据修改时间</p><p>第三天学习了系统权限的配置</p><ol><li>​    useradd【选项】【用户名】    //新建用户<ol><li>-c    指定一段注释</li><li>-d    指定目录，通常和-m一起使用创建主目录</li><li>-g    指定用户所属的用户组</li><li>-G    指定用户所属的附加组，通常和-a一起使用</li><li>-s     指定登录方式  //例如    /bin/bash</li><li>-u    指定用户的ID</li></ol></li><li>usermod【选项】【用户名】    //修改账号<ol><li>【选项】和上面的一样</li><li> usermod -L 【用户名】//锁定账号</li><li> usermod -U【用户名】//解锁账号</li></ol></li><li>userdel【选项】【用户名】    //删除用户<ol><li>-r    同时删除用户的主目录</li><li>-rf   删除用户所有文件</li></ol></li><li>passwd 【选项】【用户名】    //修改密码<ol><li>-l    禁用账号</li><li>-u   解禁账号</li><li>-d    使账号无密码</li><li>-f     强制用户下次登录时修改密码</li></ol></li><li>gropadd【选项】【编号】【用户组】    //新建用户组<ol><li>-og    //指定用户组（GID）</li></ol></li><li>gropdel【用户组】    //删除用户组</li><li>gropmod【选项】【GID编号】【用户组】    //修改用户组<ol><li>-g    //修改用户组ID</li></ol></li><li>newgrop【用户组】    //切换用户组</li></ol><p>/etc/passwd/文件</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219203229566.png" alt="image-20211219203229566"></p><p>如果把第三或者第四为改为0，用户直接获得最高系统权限</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219203534350.png" alt="image-20211219203534350"></p><p>密文处：</p><p>​    密文头部，部分</p><p>​    $1 = 表示MD5 ，哈希值(hash)： 22个字元长度</p><p>​    $5 = SHA-256 ， 哈希值(hash)：43个字元长度</p><p>​    $6 = SHA-512 ， 哈希值(hash)：86个字元长度</p><p>通过一条命名修改密码    </p><p>echo password | passwd –stdin 【用户名】</p><p>​    只适用于红帽系操作系统，比如centos，redhat等系统，在Debian系操作系统中，如Debian，Ubuntu等系统下，passwd命令没有 –stdin参数，无法完成该命令</p><p>echo 【用户名】:newpass |chpasswd    //可以用于Debian系系统</p><p>python+usermod命令</p><p>usermod命令有一个-p参数，可以直接将一个已经加密得到的密文设置为系统密码</p><p>python中有个crypt的库，可以将一个字符串用DES单项加密,相对安全性较低</p><p>所以二者结合起来使用，现将我们想要的密码用crypt库加密得到密文，再用usermod 命令的-p参数修改成系统密码</p><p>​            ``</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">R_chpass</span>(<span class="params">user,pass_</span>):</span></span><br><span class="line">    username=user</span><br><span class="line">    passwd=crypt.crypt(pass_,<span class="string">'ab'</span>)</span><br><span class="line">    os.system(<span class="string">"usermod -p %s %s"</span> % (passwd,username))</span><br></pre></td></tr></tbody></table></figure><p>wheel用户组是unix系统自带的一个具有特殊权限的用户组，可以通过cat /etc/group查看到存 在这个用户组。将普通用户添加到这个用户组之后通过su命令可以切换到超级用户root权限。</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219221733899.png" alt="image-20211219221733899"> </p><p>​            usermod -g wheel 【用户名】 //实现提权</p><p>Ubuntu也有类似的组</p><p><img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211219222056247.png" alt="image-20211219222056247"></p><p> 网络类</p><p>​    查看网卡信息</p><p>​    <code>ip addr</code></p><p>​    查看路由信息&amp;默认网关</p><p>​    <code>ip route</code></p><p>​    查看网卡信息（老系统）</p><p>​    <code>ifconfig</code></p><p>​    查看本机开发的TCP和UDP端口</p><p>​    <code>netstat -antlp</code></p><p>​    <code>netstat -anulp</code></p><p>​    （-a:显示所有， -n:不解析服务名称， t:仅显示tcp信息， -u:仅显示udp信息）</p><p>​    查看正在监听的端口</p><p>​    <code>ss -antlp</code>和netstat类似，但是比netstat更快</p><p>​    查看路由跳点（可以看到路由都经过哪些地址最终到达目标地址）</p><p>​    TRACERT （windows：必须大写）</p><p>​    <img src="https://raw.githubusercontent.com/aisibuhuipao/img/main/image-20211225163324758.png" alt="image-20211225163324758"></p><p>​    查询域名ip地址信息 </p><p>​    <code>nslookup baidu.com</code></p><p>服务类</p><p>​    查看系统进程</p><p>​    <code>ps -aux</code> （通常和kill -9一起使用&amp;最常用法是：ps -ef | grep xxx:查询某个关键字）         a:显示所有程序         u:以用户为主的格式来显示         x:显示所有程序，不以终端机来区分 </p><p>ps看到的是命令执行瞬间的进程信息,而top可以持续的监视 </p><p>ps只是查看进程,而top还可以监视系统性能,如平均负载,cpu和内存的消耗</p><p><code>top</code></p><p>top还可以操作进程,如改变优先级(命令r)和关闭进程(命令k) top主要看cpu,内存使用情况，及占用资源最多的进程由高到低排序，关注点在 于资源占用情况，但是查看内存占用是不准确的</p><p>查看内存： </p><p><code>free -h</code>       自动转换单位(常用)</p><pre><code>     -b         Byte显示</code></pre><p>​        -k          KB显示</p><p>​        -m         MB显示</p><p>​        -g          GB显示</p><p>​        -o         不显示缓冲区 </p><p>​        -t         显示内存总和列</p><p>​        -s         间隔n秒，持续查看 内存总数 已使用总数 空闲内存 多个进程共享的内存</p><p>设置服务</p><p>​    systemctl </p><p>​        restart xxx //重启或这重新加载服务 </p><p>​        start //启动服务 </p><p>​        stop //停止服务，关机或重新启动会失效 </p><p>​        status //查看服务执行信息和有没有开机启动的信息 </p><p>​        enable //设置服务开机启动 </p><p>​        disable //设置服务开机不启动</p><p>结束进程</p><p>​     kill    </p><p>​         -1(HUP) 重载进程</p><p>​        -9(KILL) 杀死一个进程</p><p>​        -15(TERM) 正常停止进程</p><p>显示当前系统信息        </p><p>w</p><p>显示当前登录的用户</p><p>who</p><p>特殊操作 切换和隐藏程序执行窗口，只有主动停止或者关机重启，程序才会停止，有点类似windows的最 小化 在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始 流行的Linux发行版（例如Red Hat Enterprise Linux）通常会自带screen实用程序，如 果没有的话，可以从GNU screen的官方网站下载</p><p><code>yum install -y screen</code></p><p> <code>screen -ls</code>列出所有后台的会话</p><p><code>screen -S name1 vim</code> 给窗口命名</p><p><code>screen -r 窗口号</code>重新打开会话窗口</p><p>后台 control + a + d 切换窗口</p><p><code>screen -rd name1</code>将指定的窗口离线或恢复离线</p><p>后台挂起运行</p><p><code>nohup</code></p><p><code>nohup ping 8.8.8.8 &amp;</code>        //不加 &amp; 的话，关闭窗口会中断执行</p><p>fg 显示后台挂起的程序</p><p>显示目录文件大小</p><p>du 文件名</p><p>显示当前目录下的文件所占用的空间</p><p>du -sh</p><p>查看磁盘被占用的信息</p><p>df</p><p>防火墙(/etc/services)</p><p> <code>ystemctl start firewalld</code> 启动</p><p> <code>systemctl stop firewalld</code> 停止</p><p> <code>firewall-cmd --reload</code> 重新加载防火墙</p><p> <code>firewall-camd --state</code> 查看运行状态</p><p> <code>firewall-cmd --zone=public --list-ports </code> 显示当前允许通过的端口信息</p><p> <code>firewall-cmd --zone=public --list-service</code> 显示当前允许通过的服务</p><p> <code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code> 允许哪个端口可以通过</p><p> <code>firewall-cmd --zone=public --add-service=http --permanent</code> 允许哪个服务可以通过</p><p> <code>firewall-cmd --zone=public --remove-port=http --permanent</code> 删除指定的端口</p><p>开启一个网页端的端口</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">8080</span></span><br></pre></td></tr></tbody></table></figure><p>最后，学习了 LAMP 和 Nginx 的搭建，在我的另外两篇博文里面</p><p><a href="http://aisibuhuipao.github.io/2021/12/25/LAMP%E6%90%AD%E5%BB%BA/">LAMP</a></p><p><a href="http://aisibuhuipao.github.io/2021/12/25/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx/">Nginx</a> 当然，这个Nginx 服务也可以用<code>yum install -y nginx</code>来安装，更方便一点。</p><p>emmmmmm………嗯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这一周的生活&quot;&gt;&lt;a href=&quot;#这一周的生活&quot; class=&quot;headerlink&quot; title=&quot;这一周的生活&quot;&gt;&lt;/a&gt;这一周的生活&lt;/h1&gt;&lt;p&gt;​    自12月13号落地杭州之后对这边的一切都充满期待，也是第一次吃到包米饭的烧卖，不知道是不是我不习惯</summary>
      
    
    
    
    
    <category term="生活" scheme="http://aisibuhuipao.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
